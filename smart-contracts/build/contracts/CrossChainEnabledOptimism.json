{
  "contractName": "CrossChainEnabledOptimism",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://www.optimism.io/[Optimism] specialization or the {CrossChainEnabled} abstraction. The messenger (`CrossDomainMessenger`) contract is provided and maintained by the optimism team. You can find the address of this contract on mainnet and kovan in the https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts/deployments[deployments section of Optimism monorepo]. _Available since v4.6._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"}},\"stateVariables\":{\"_messenger\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/crosschain/optimism/CrossChainEnabledOptimism.sol\":\"CrossChainEnabledOptimism\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/crosschain/CrossChainEnabled.sol\":{\"keccak256\":\"0xe3796f669986f88c231262fc454399c7068123d59c6d2721b3e8807e1b5490e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01dae8a0bedc02610d1eb581a1114ed87afc5f6c0de59b4ffa91fb3d30fc94a7\",\"dweb:/ipfs/QmTEs6tt5TUBxQKnFw4uNPn7ZE59uz3E2hhVKCnKvpzwPh\"]},\"project:/contracts/crosschain/errors.sol\":{\"keccak256\":\"0x9d3ffe3bc59c2dac36d93cb4641ffeaa98b96cce588d106efe050a0b67b4d902\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf8c1e49412c6975de84fe2c72f6785f139d36843aaa623bc9964003748b3757\",\"dweb:/ipfs/QmcDPdSYsWHGnMZB6yHH8Tczr16QVjd8TjPcMVDdyvPV1W\"]},\"project:/contracts/crosschain/optimism/CrossChainEnabledOptimism.sol\":{\"keccak256\":\"0x8be5992590b111cbbd9aa386e689c22df6b9ada7546eda90a8f59ceb999b6317\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b4121f42b49a7e4225f261ad8c34c46919d65a5aa5de28896f1491a14cbc308\",\"dweb:/ipfs/QmTm8eH2AvFMS6Ed6UjfGbiN5sVmLywsDSSAXWju55rdN6\"]},\"project:/contracts/crosschain/optimism/LibOptimism.sol\":{\"keccak256\":\"0x785e6dcff55769dab6f565cc127a46dbc7ebc0637bd5962b871677947c7f3e8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a56ad5d35493ae668331f026799b4c59cb1384c335f371d80db822a2205d51e\",\"dweb:/ipfs/QmWjgxHJcqHLFi1P9oqkDLH6K8dCTDfvUiR9pRb7GibHmr\"]},\"project:/contracts/vendor/optimism/ICrossDomainMessenger.sol\":{\"keccak256\":\"0x00be3915a58c2915aceaed6ba0efde756a4ed42c4ef8cf2d1daefccb935cdb47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a930ca29d2c2eae6dad61553f10c591281dc89b61a7f7cb71d97c6661a98c022\",\"dweb:/ipfs/QmNx12nwgV4gncoztCqvGWiPZdTJdrB7nLqdhjkjzynLeg\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (crosschain/optimism/CrossChainEnabledOptimism.sol)\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport \"../CrossChainEnabled.sol\";\r\nimport \"./LibOptimism.sol\";\r\n\r\n/**\r\n * @dev https://www.optimism.io/[Optimism] specialization or the\r\n * {CrossChainEnabled} abstraction.\r\n *\r\n * The messenger (`CrossDomainMessenger`) contract is provided and maintained by\r\n * the optimism team. You can find the address of this contract on mainnet and\r\n * kovan in the https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts/deployments[deployments section of Optimism monorepo].\r\n *\r\n * _Available since v4.6._\r\n */\r\nabstract contract CrossChainEnabledOptimism is CrossChainEnabled {\r\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\r\n    address private immutable _messenger;\r\n\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor(address messenger) {\r\n        _messenger = messenger;\r\n    }\r\n\r\n    /**\r\n     * @dev see {CrossChainEnabled-_isCrossChain}\r\n     */\r\n    function _isCrossChain() internal view virtual override returns (bool) {\r\n        return LibOptimism.isCrossChain(_messenger);\r\n    }\r\n\r\n    /**\r\n     * @dev see {CrossChainEnabled-_crossChainSender}\r\n     */\r\n    function _crossChainSender() internal view virtual override onlyCrossChain returns (address) {\r\n        return LibOptimism.crossChainSender(_messenger);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\SSAFY\\Desktop\\S08P22A308\\smart-contracts\\contracts\\crosschain\\optimism\\CrossChainEnabledOptimism.sol",
  "ast": {
    "absolutePath": "project:/contracts/crosschain/optimism/CrossChainEnabledOptimism.sol",
    "exportedSymbols": {
      "CrossChainEnabled": [
        1677
      ],
      "CrossChainEnabledOptimism": [
        2031
      ],
      "InvalidCrossChainSender": [
        1981
      ],
      "LibOptimism": [
        2075
      ],
      "NotCrossChainCall": [
        1975
      ],
      "Optimism_Bridge": [
        40458
      ]
    },
    "id": 2032,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1983,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "136:23:19"
      },
      {
        "absolutePath": "project:/contracts/crosschain/CrossChainEnabled.sol",
        "file": "../CrossChainEnabled.sol",
        "id": 1984,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2032,
        "sourceUnit": 1678,
        "src": "163:34:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/crosschain/optimism/LibOptimism.sol",
        "file": "./LibOptimism.sol",
        "id": 1985,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2032,
        "sourceUnit": 2076,
        "src": "199:27:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1987,
              "name": "CrossChainEnabled",
              "nameLocations": [
                "738:17:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1677,
              "src": "738:17:19"
            },
            "id": 1988,
            "nodeType": "InheritanceSpecifier",
            "src": "738:17:19"
          }
        ],
        "canonicalName": "CrossChainEnabledOptimism",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1986,
          "nodeType": "StructuredDocumentation",
          "src": "230:459:19",
          "text": " @dev https://www.optimism.io/[Optimism] specialization or the\n {CrossChainEnabled} abstraction.\n The messenger (`CrossDomainMessenger`) contract is provided and maintained by\n the optimism team. You can find the address of this contract on mainnet and\n kovan in the https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts/deployments[deployments section of Optimism monorepo].\n _Available since v4.6._"
        },
        "fullyImplemented": true,
        "id": 2031,
        "linearizedBaseContracts": [
          2031,
          1677
        ],
        "name": "CrossChainEnabledOptimism",
        "nameLocation": "709:25:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1989,
              "nodeType": "StructuredDocumentation",
              "src": "763:61:19",
              "text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
            },
            "id": 1991,
            "mutability": "immutable",
            "name": "_messenger",
            "nameLocation": "856:10:19",
            "nodeType": "VariableDeclaration",
            "scope": 2031,
            "src": "830:36:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1990,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "830:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2001,
              "nodeType": "Block",
              "src": "960:41:19",
              "statements": [
                {
                  "expression": {
                    "id": 1999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1997,
                      "name": "_messenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "971:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1998,
                      "name": "messenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1994,
                      "src": "984:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "971:22:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2000,
                  "nodeType": "ExpressionStatement",
                  "src": "971:22:19"
                }
              ]
            },
            "documentation": {
              "id": 1992,
              "nodeType": "StructuredDocumentation",
              "src": "875:48:19",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 2002,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1994,
                  "mutability": "mutable",
                  "name": "messenger",
                  "nameLocation": "949:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "941:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "940:19:19"
            },
            "returnParameters": {
              "id": 1996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "960:0:19"
            },
            "scope": 2031,
            "src": "929:72:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1670
            ],
            "body": {
              "id": 2014,
              "nodeType": "Block",
              "src": "1149:62:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2011,
                        "name": "_messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "1192:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2009,
                        "name": "LibOptimism",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "1167:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibOptimism_$2075_$",
                          "typeString": "type(library LibOptimism)"
                        }
                      },
                      "id": 2010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1179:12:19",
                      "memberName": "isCrossChain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2051,
                      "src": "1167:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 2012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1167:36:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2008,
                  "id": 2013,
                  "nodeType": "Return",
                  "src": "1160:43:19"
                }
              ]
            },
            "documentation": {
              "id": 2003,
              "nodeType": "StructuredDocumentation",
              "src": "1009:63:19",
              "text": " @dev see {CrossChainEnabled-_isCrossChain}"
            },
            "id": 2015,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isCrossChain",
            "nameLocation": "1087:13:19",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2005,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1125:8:19"
            },
            "parameters": {
              "id": 2004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1100:2:19"
            },
            "returnParameters": {
              "id": 2008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2007,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2015,
                  "src": "1143:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2006,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1142:6:19"
            },
            "scope": 2031,
            "src": "1078:133:19",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1676
            ],
            "body": {
              "id": 2029,
              "nodeType": "Block",
              "src": "1385:66:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2026,
                        "name": "_messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "1432:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2024,
                        "name": "LibOptimism",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "1403:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibOptimism_$2075_$",
                          "typeString": "type(library LibOptimism)"
                        }
                      },
                      "id": 2025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1415:16:19",
                      "memberName": "crossChainSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2074,
                      "src": "1403:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view returns (address)"
                      }
                    },
                    "id": 2027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2023,
                  "id": 2028,
                  "nodeType": "Return",
                  "src": "1396:47:19"
                }
              ]
            },
            "documentation": {
              "id": 2016,
              "nodeType": "StructuredDocumentation",
              "src": "1219:67:19",
              "text": " @dev see {CrossChainEnabled-_crossChainSender}"
            },
            "id": 2030,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2020,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2019,
                  "name": "onlyCrossChain",
                  "nameLocations": [
                    "1352:14:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1643,
                  "src": "1352:14:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1352:14:19"
              }
            ],
            "name": "_crossChainSender",
            "nameLocation": "1301:17:19",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2018,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1343:8:19"
            },
            "parameters": {
              "id": 2017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1318:2:19"
            },
            "returnParameters": {
              "id": 2023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2030,
                  "src": "1376:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1375:9:19"
            },
            "scope": 2031,
            "src": "1292:159:19",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2032,
        "src": "691:763:19",
        "usedErrors": []
      }
    ],
    "src": "136:1320:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-23T05:45:08.058Z",
  "devdoc": {
    "details": "https://www.optimism.io/[Optimism] specialization or the {CrossChainEnabled} abstraction. The messenger (`CrossDomainMessenger`) contract is provided and maintained by the optimism team. You can find the address of this contract on mainnet and kovan in the https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts/deployments[deployments section of Optimism monorepo]. _Available since v4.6._",
    "kind": "dev",
    "methods": {
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      }
    },
    "stateVariables": {
      "_messenger": {
        "custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}