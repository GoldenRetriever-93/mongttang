{
  "contractName": "BadBeaconNotContract",
  "abi": [
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/mocks/proxy/BadBeacon.sol\":\"BadBeaconNotContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/mocks/proxy/BadBeacon.sol\":{\"keccak256\":\"0x3b0cb2d1551785d0d8547358df369a1b878fc4d40e948d03d8c3416d509b3131\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be70f0bde6b91746f97cbf2709237af741a7f2d45e9598c89bf02b3de3302738\",\"dweb:/ipfs/QmW39QexhZp8AzeJK238vZQjwksxQTZYVkPMXcdCXwaBxv\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060dc8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635c60da1b14602d575b600080fd5b60336047565b604051603e9190608d565b60405180910390f35b60006001905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006079826050565b9050919050565b6087816070565b82525050565b600060208201905060a060008301846080565b9291505056fea264697066735822122000e4f84efc480c4a14ca4e51e96030fcf5b5b4f31a317be0c37d02971b2a599d64736f6c63430008130033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80635c60da1b14602d575b600080fd5b60336047565b604051603e9190608d565b60405180910390f35b60006001905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006079826050565b9050919050565b6087816070565b82525050565b600060208201905060a060008301846080565b9291505056fea264697066735822122000e4f84efc480c4a14ca4e51e96030fcf5b5b4f31a317be0c37d02971b2a599d64736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:590:257",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:257",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:257",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:257"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:257",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:257"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:257"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:257"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:257",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:257",
                "type": ""
              }
            ],
            "src": "7:126:257"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:257",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:257",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:257"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:257"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:257"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:257"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:257",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:257",
                "type": ""
              }
            ],
            "src": "139:96:257"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:257",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:257"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:257"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:257"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:257"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:257"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:257"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:257"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:257",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:257",
                "type": ""
              }
            ],
            "src": "241:118:257"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:257",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:257",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:257"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:257",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:257"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:257"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:257"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:257"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:257"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:257",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:257"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:257"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:257"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:257"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:257"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:257",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:257",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:257",
                "type": ""
              }
            ],
            "src": "365:222:257"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 257,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "93:136:119:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "93:136:119:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;130:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;179:7;214:3;199:19;;130:96;:::o;7:126:257:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract BadBeaconNoImpl {}\r\n\r\ncontract BadBeaconNotContract {\r\n    function implementation() external pure returns (address) {\r\n        return address(0x1);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\SSAFY\\Desktop\\S08P22A308\\smart-contracts\\contracts\\mocks\\proxy\\BadBeacon.sol",
  "ast": {
    "absolutePath": "project:/contracts/mocks/proxy/BadBeacon.sol",
    "exportedSymbols": {
      "BadBeaconNoImpl": [
        14551
      ],
      "BadBeaconNotContract": [
        14563
      ]
    },
    "id": 14564,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14550,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:119"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BadBeaconNoImpl",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 14551,
        "linearizedBaseContracts": [
          14551
        ],
        "name": "BadBeaconNoImpl",
        "nameLocation": "71:15:119",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 14564,
        "src": "62:27:119",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BadBeaconNotContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 14563,
        "linearizedBaseContracts": [
          14563
        ],
        "name": "BadBeaconNotContract",
        "nameLocation": "102:20:119",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 14561,
              "nodeType": "Block",
              "src": "188:38:119",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307831",
                        "id": 14558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "214:3:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "0x1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 14557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "206:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 14556,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "206:7:119",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 14559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "206:12:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 14555,
                  "id": 14560,
                  "nodeType": "Return",
                  "src": "199:19:119"
                }
              ]
            },
            "functionSelector": "5c60da1b",
            "id": 14562,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "139:14:119",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "153:2:119"
            },
            "returnParameters": {
              "id": 14555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14554,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14562,
                  "src": "179:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "179:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "178:9:119"
            },
            "scope": 14563,
            "src": "130:96:119",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 14564,
        "src": "93:136:119",
        "usedErrors": []
      }
    ],
    "src": "35:196:119"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-22T03:48:03.658Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}