{
  "contractName": "Create2",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/utils/Create2.sol\":{\"keccak256\":\"0x24952f7913b0c68e7154280badce9a37813ccd855e629bb55233e4237a529a9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://067c5ca12508811b60e452df762f492fe4ce322eb95b15b7d1d06a1d7b5cdc24\",\"dweb:/ipfs/QmfYiPqWznHcYJoqebEaQFtt1bTC7HQDGcdYC9sXo7NcJ2\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220272f0a6f3e2726ab815d2c7a2dc89bb1ba84dd205b1a21f91d4d623ab6557cca64736f6c63430008130033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220272f0a6f3e2726ab815d2c7a2dc89bb1ba84dd205b1a21f91d4d623ab6557cca64736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "508:3517:218:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "508:3517:218:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Create2.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\r\n * `CREATE2` can be used to compute in advance the address where a smart\r\n * contract will be deployed, which allows for interesting new mechanisms known\r\n * as 'counterfactual interactions'.\r\n *\r\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\r\n * information.\r\n */\r\nlibrary Create2 {\r\n    /**\r\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\r\n     * will be deployed can be known in advance via {computeAddress}.\r\n     *\r\n     * The bytecode for a contract can be obtained from Solidity with\r\n     * `type(contractName).creationCode`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `bytecode` must not be empty.\r\n     * - `salt` must have not been used for `bytecode` already.\r\n     * - the factory must have a balance of at least `amount`.\r\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\r\n     */\r\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\r\n        require(address(this).balance >= amount, \"Create2: insufficient balance\");\r\n        require(bytecode.length != 0, \"Create2: bytecode length is zero\");\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\r\n        }\r\n        require(addr != address(0), \"Create2: Failed on deploy\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\r\n     * `bytecodeHash` or `salt` will result in a new destination address.\r\n     */\r\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\r\n        return computeAddress(salt, bytecodeHash, address(this));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\r\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\r\n     */\r\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            let ptr := mload(0x40) // Get free memory pointer\r\n\r\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\r\n            // |-------------------|---------------------------------------------------------------------------|\r\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\r\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\r\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\r\n            // | 0xFF              |            FF                                                             |\r\n            // |-------------------|---------------------------------------------------------------------------|\r\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\r\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\r\n\r\n            mstore(add(ptr, 0x40), bytecodeHash)\r\n            mstore(add(ptr, 0x20), salt)\r\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\r\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\r\n            mstore8(start, 0xff)\r\n            addr := keccak256(start, 85)\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\akqjq\\Desktop\\S08P22A308\\smart-contracts\\contracts\\utils\\Create2.sol",
  "ast": {
    "absolutePath": "project:/contracts/utils/Create2.sol",
    "exportedSymbols": {
      "Create2": [
        31331
      ]
    },
    "id": 31332,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 31252,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "104:23:218"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Create2",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 31253,
          "nodeType": "StructuredDocumentation",
          "src": "131:375:218",
          "text": " @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."
        },
        "fullyImplemented": true,
        "id": 31331,
        "linearizedBaseContracts": [
          31331
        ],
        "name": "Create2",
        "nameLocation": "516:7:218",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 31295,
              "nodeType": "Block",
              "src": "1211:391:218",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 31268,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1238:4:218",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Create2_$31331",
                                  "typeString": "library Create2"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Create2_$31331",
                                  "typeString": "library Create2"
                                }
                              ],
                              "id": 31267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1230:7:218",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31266,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1230:7:218",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 31269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1230:13:218",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 31270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1244:7:218",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1230:21:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 31271,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31256,
                          "src": "1255:6:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1230:31:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "437265617465323a20696e73756666696369656e742062616c616e6365",
                        "id": 31273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1263:31:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca",
                          "typeString": "literal_string \"Create2: insufficient balance\""
                        },
                        "value": "Create2: insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca",
                          "typeString": "literal_string \"Create2: insufficient balance\""
                        }
                      ],
                      "id": 31265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1222:7:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1222:73:218",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31275,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:73:218"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 31277,
                            "name": "bytecode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31260,
                            "src": "1314:8:218",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 31278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1323:6:218",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1314:15:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 31279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1333:1:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1314:20:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "437265617465323a2062797465636f6465206c656e677468206973207a65726f",
                        "id": 31281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1336:34:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0",
                          "typeString": "literal_string \"Create2: bytecode length is zero\""
                        },
                        "value": "Create2: bytecode length is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0",
                          "typeString": "literal_string \"Create2: bytecode length is zero\""
                        }
                      ],
                      "id": 31276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1306:7:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1306:65:218",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31283,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:65:218"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1435:93:218",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1450:67:218",
                        "value": {
                          "arguments": [
                            {
                              "name": "amount",
                              "nodeType": "YulIdentifier",
                              "src": "1466:6:218"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1478:8:218"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1488:4:218",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1474:3:218"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1474:19:218"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1501:8:218"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1495:5:218"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1495:15:218"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1512:4:218"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1458:7:218"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1458:59:218"
                        },
                        "variableNames": [
                          {
                            "name": "addr",
                            "nodeType": "YulIdentifier",
                            "src": "1450:4:218"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": "@solidity memory-safe-assembly",
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 31263,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1450:4:218",
                      "valueSize": 1
                    },
                    {
                      "declaration": 31256,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1466:6:218",
                      "valueSize": 1
                    },
                    {
                      "declaration": 31260,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1478:8:218",
                      "valueSize": 1
                    },
                    {
                      "declaration": 31260,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1501:8:218",
                      "valueSize": 1
                    },
                    {
                      "declaration": 31258,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1512:4:218",
                      "valueSize": 1
                    }
                  ],
                  "id": 31284,
                  "nodeType": "InlineAssembly",
                  "src": "1426:102:218"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 31291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31286,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31263,
                          "src": "1546:4:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 31289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1562:1:218",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 31288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1554:7:218",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31287,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1554:7:218",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1554:10:218",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1546:18:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "437265617465323a204661696c6564206f6e206465706c6f79",
                        "id": 31292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1566:27:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676",
                          "typeString": "literal_string \"Create2: Failed on deploy\""
                        },
                        "value": "Create2: Failed on deploy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676",
                          "typeString": "literal_string \"Create2: Failed on deploy\""
                        }
                      ],
                      "id": 31285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1538:7:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:56:218",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31294,
                  "nodeType": "ExpressionStatement",
                  "src": "1538:56:218"
                }
              ]
            },
            "documentation": {
              "id": 31254,
              "nodeType": "StructuredDocumentation",
              "src": "531:573:218",
              "text": " @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."
            },
            "id": 31296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nameLocation": "1119:6:218",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31256,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1134:6:218",
                  "nodeType": "VariableDeclaration",
                  "scope": 31296,
                  "src": "1126:14:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31258,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1150:4:218",
                  "nodeType": "VariableDeclaration",
                  "scope": 31296,
                  "src": "1142:12:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31257,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31260,
                  "mutability": "mutable",
                  "name": "bytecode",
                  "nameLocation": "1169:8:218",
                  "nodeType": "VariableDeclaration",
                  "scope": 31296,
                  "src": "1156:21:218",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 31259,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:5:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1125:53:218"
            },
            "returnParameters": {
              "id": 31264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31263,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1205:4:218",
                  "nodeType": "VariableDeclaration",
                  "scope": 31296,
                  "src": "1197:12:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1196:14:218"
            },
            "scope": 31331,
            "src": "1110:492:218",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 31315,
              "nodeType": "Block",
              "src": "1904:75:218",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31307,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31299,
                        "src": "1937:4:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 31308,
                        "name": "bytecodeHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31301,
                        "src": "1943:12:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31311,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1965:4:218",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Create2_$31331",
                              "typeString": "library Create2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Create2_$31331",
                              "typeString": "library Create2"
                            }
                          ],
                          "id": 31310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1957:7:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31309,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1957:7:218",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1957:13:218",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31306,
                      "name": "computeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31316,
                        31330
                      ],
                      "referencedDeclaration": 31330,
                      "src": "1922:14:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32,address) pure returns (address)"
                      }
                    },
                    "id": 31313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1922:49:218",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 31305,
                  "id": 31314,
                  "nodeType": "Return",
                  "src": "1915:56:218"
                }
              ]
            },
            "documentation": {
              "id": 31297,
              "nodeType": "StructuredDocumentation",
              "src": "1610:196:218",
              "text": " @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."
            },
            "id": 31316,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeAddress",
            "nameLocation": "1821:14:218",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31299,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1844:4:218",
                  "nodeType": "VariableDeclaration",
                  "scope": 31316,
                  "src": "1836:12:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31298,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1836:7:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31301,
                  "mutability": "mutable",
                  "name": "bytecodeHash",
                  "nameLocation": "1858:12:218",
                  "nodeType": "VariableDeclaration",
                  "scope": 31316,
                  "src": "1850:20:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31300,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1835:36:218"
            },
            "returnParameters": {
              "id": 31305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31304,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31316,
                  "src": "1895:7:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1894:9:218"
            },
            "scope": 31331,
            "src": "1812:167:218",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 31329,
              "nodeType": "Block",
              "src": "2343:1679:218",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2407:1608:218",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2422:22:218",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2439:4:218",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2433:5:218"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2433:11:218"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "2426:3:218",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3658:3:218"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3663:4:218",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3654:3:218"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3654:14:218"
                            },
                            {
                              "name": "bytecodeHash",
                              "nodeType": "YulIdentifier",
                              "src": "3670:12:218"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3647:6:218"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3647:36:218"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3647:36:218"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3708:3:218"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3713:4:218",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3704:3:218"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3704:14:218"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "3720:4:218"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3697:6:218"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3697:28:218"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3697:28:218"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "3746:3:218"
                            },
                            {
                              "name": "deployer",
                              "nodeType": "YulIdentifier",
                              "src": "3751:8:218"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3739:6:218"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3739:21:218"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3739:21:218"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3823:27:218",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "3840:3:218"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3845:4:218",
                              "type": "",
                              "value": "0x0b"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3836:3:218"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3836:14:218"
                        },
                        "variables": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "3827:5:218",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "3950:5:218"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3957:4:218",
                              "type": "",
                              "value": "0xff"
                            }
                          ],
                          "functionName": {
                            "name": "mstore8",
                            "nodeType": "YulIdentifier",
                            "src": "3942:7:218"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3942:20:218"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3942:20:218"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3976:28:218",
                        "value": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "3994:5:218"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4001:2:218",
                              "type": "",
                              "value": "85"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "3984:9:218"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3984:20:218"
                        },
                        "variableNames": [
                          {
                            "name": "addr",
                            "nodeType": "YulIdentifier",
                            "src": "3976:4:218"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": "@solidity memory-safe-assembly",
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 31326,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3976:4:218",
                      "valueSize": 1
                    },
                    {
                      "declaration": 31321,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3670:12:218",
                      "valueSize": 1
                    },
                    {
                      "declaration": 31323,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3751:8:218",
                      "valueSize": 1
                    },
                    {
                      "declaration": 31319,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3720:4:218",
                      "valueSize": 1
                    }
                  ],
                  "id": 31328,
                  "nodeType": "InlineAssembly",
                  "src": "2398:1617:218"
                }
              ]
            },
            "documentation": {
              "id": 31317,
              "nodeType": "StructuredDocumentation",
              "src": "1987:235:218",
              "text": " @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."
            },
            "id": 31330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeAddress",
            "nameLocation": "2237:14:218",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31319,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "2260:4:218",
                  "nodeType": "VariableDeclaration",
                  "scope": 31330,
                  "src": "2252:12:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31318,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:7:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31321,
                  "mutability": "mutable",
                  "name": "bytecodeHash",
                  "nameLocation": "2274:12:218",
                  "nodeType": "VariableDeclaration",
                  "scope": 31330,
                  "src": "2266:20:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31320,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2266:7:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31323,
                  "mutability": "mutable",
                  "name": "deployer",
                  "nameLocation": "2296:8:218",
                  "nodeType": "VariableDeclaration",
                  "scope": 31330,
                  "src": "2288:16:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2288:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2251:54:218"
            },
            "returnParameters": {
              "id": 31327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31326,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "2337:4:218",
                  "nodeType": "VariableDeclaration",
                  "scope": 31330,
                  "src": "2329:12:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2329:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2328:14:218"
            },
            "scope": 31331,
            "src": "2228:1794:218",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 31332,
        "src": "508:3517:218",
        "usedErrors": []
      }
    ],
    "src": "104:3923:218"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-22T16:34:03.175Z",
  "devdoc": {
    "details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}