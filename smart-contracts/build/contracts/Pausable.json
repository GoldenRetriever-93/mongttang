{
  "contractName": "Pausable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0b7aadc930e970256fbc353a8f5081e217ac0b1443e3d317cf4cb4cdf2445e3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72d90b3fc3a34b2db50c05839f6088f638ddf16aceb379c48e8aa724840fd5f6\",\"dweb:/ipfs/QmUoEoGEDs4sq7pbSS1G4asybFW1B4jJ4YjExM39a34BhX\"]},\"project:/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which allows children to implement an emergency stop\r\n * mechanism that can be triggered by an authorized account.\r\n *\r\n * This module is used through inheritance. It will make available the\r\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\r\n * the functions of your contract. Note that they will not be pausable by\r\n * simply including this module, only once the modifiers are put in place.\r\n */\r\nabstract contract Pausable is Context {\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    constructor() {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        _requireNotPaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        _requirePaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is paused.\r\n     */\r\n    function _requireNotPaused() internal view virtual {\r\n        require(!paused(), \"Pausable: paused\");\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is not paused.\r\n     */\r\n    function _requirePaused() internal view virtual {\r\n        require(paused(), \"Pausable: not paused\");\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\akqjq\\Desktop\\S08P22A308\\smart-contracts\\contracts\\security\\Pausable.sol",
  "ast": {
    "absolutePath": "project:/contracts/security/Pausable.sol",
    "exportedSymbols": {
      "Context": [
        31176
      ],
      "Pausable": [
        19005
      ]
    },
    "id": 19006,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 18899,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "108:23:156"
      },
      {
        "absolutePath": "project:/contracts/utils/Context.sol",
        "file": "../utils/Context.sol",
        "id": 18900,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19006,
        "sourceUnit": 31177,
        "src": "135:30:156",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 18902,
              "name": "Context",
              "nameLocations": [
                "648:7:156"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31176,
              "src": "648:7:156"
            },
            "id": 18903,
            "nodeType": "InheritanceSpecifier",
            "src": "648:7:156"
          }
        ],
        "canonicalName": "Pausable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 18901,
          "nodeType": "StructuredDocumentation",
          "src": "169:447:156",
          "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
        },
        "fullyImplemented": true,
        "id": 19005,
        "linearizedBaseContracts": [
          19005,
          31176
        ],
        "name": "Pausable",
        "nameLocation": "636:8:156",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 18904,
              "nodeType": "StructuredDocumentation",
              "src": "663:75:156",
              "text": " @dev Emitted when the pause is triggered by `account`."
            },
            "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
            "id": 18908,
            "name": "Paused",
            "nameLocation": "750:6:156",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18906,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "765:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18908,
                  "src": "757:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "756:17:156"
            },
            "src": "744:30:156"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 18909,
              "nodeType": "StructuredDocumentation",
              "src": "782:72:156",
              "text": " @dev Emitted when the pause is lifted by `account`."
            },
            "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
            "id": 18913,
            "name": "Unpaused",
            "nameLocation": "866:8:156",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18911,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "883:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18913,
                  "src": "875:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "874:17:156"
            },
            "src": "860:32:156"
          },
          {
            "constant": false,
            "id": 18915,
            "mutability": "mutable",
            "name": "_paused",
            "nameLocation": "913:7:156",
            "nodeType": "VariableDeclaration",
            "scope": 19005,
            "src": "900:20:156",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 18914,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "900:4:156",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 18923,
              "nodeType": "Block",
              "src": "1018:34:156",
              "statements": [
                {
                  "expression": {
                    "id": 18921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18919,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18915,
                      "src": "1029:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 18920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1039:5:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1029:15:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18922,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:15:156"
                }
              ]
            },
            "documentation": {
              "id": 18916,
              "nodeType": "StructuredDocumentation",
              "src": "929:69:156",
              "text": " @dev Initializes the contract in unpaused state."
            },
            "id": 18924,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1015:2:156"
            },
            "returnParameters": {
              "id": 18918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1018:0:156"
            },
            "scope": 19005,
            "src": "1004:48:156",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18931,
              "nodeType": "Block",
              "src": "1272:50:156",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 18927,
                      "name": "_requireNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18961,
                      "src": "1283:17:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 18928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:19:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18929,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:19:156"
                },
                {
                  "id": 18930,
                  "nodeType": "PlaceholderStatement",
                  "src": "1313:1:156"
                }
              ]
            },
            "documentation": {
              "id": 18925,
              "nodeType": "StructuredDocumentation",
              "src": "1060:181:156",
              "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
            },
            "id": 18932,
            "name": "whenNotPaused",
            "nameLocation": "1256:13:156",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 18926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1269:2:156"
            },
            "src": "1247:75:156",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18939,
              "nodeType": "Block",
              "src": "1531:47:156",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 18935,
                      "name": "_requirePaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18972,
                      "src": "1542:14:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 18936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1542:16:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18937,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:16:156"
                },
                {
                  "id": 18938,
                  "nodeType": "PlaceholderStatement",
                  "src": "1569:1:156"
                }
              ]
            },
            "documentation": {
              "id": 18933,
              "nodeType": "StructuredDocumentation",
              "src": "1330:173:156",
              "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
            },
            "id": 18940,
            "name": "whenPaused",
            "nameLocation": "1518:10:156",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 18934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1528:2:156"
            },
            "src": "1509:69:156",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18948,
              "nodeType": "Block",
              "src": "1731:33:156",
              "statements": [
                {
                  "expression": {
                    "id": 18946,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18915,
                    "src": "1749:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 18945,
                  "id": 18947,
                  "nodeType": "Return",
                  "src": "1742:14:156"
                }
              ]
            },
            "documentation": {
              "id": 18941,
              "nodeType": "StructuredDocumentation",
              "src": "1586:86:156",
              "text": " @dev Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "id": 18949,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "1687:6:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1693:2:156"
            },
            "returnParameters": {
              "id": 18945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18944,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18949,
                  "src": "1725:4:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18943,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1725:4:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1724:6:156"
            },
            "scope": 19005,
            "src": "1678:86:156",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18960,
              "nodeType": "Block",
              "src": "1888:57:156",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1907:9:156",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 18954,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18949,
                            "src": "1908:6:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 18955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1908:8:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "id": 18957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1918:18:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        },
                        "value": "Pausable: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        }
                      ],
                      "id": 18953,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1899:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1899:38:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18959,
                  "nodeType": "ExpressionStatement",
                  "src": "1899:38:156"
                }
              ]
            },
            "documentation": {
              "id": 18950,
              "nodeType": "StructuredDocumentation",
              "src": "1772:59:156",
              "text": " @dev Throws if the contract is paused."
            },
            "id": 18961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireNotPaused",
            "nameLocation": "1846:17:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1863:2:156"
            },
            "returnParameters": {
              "id": 18952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1888:0:156"
            },
            "scope": 19005,
            "src": "1837:108:156",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18971,
              "nodeType": "Block",
              "src": "2070:60:156",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18966,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18949,
                          "src": "2089:6:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 18967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2089:8:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "id": 18968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2099:22:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        },
                        "value": "Pausable: not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        }
                      ],
                      "id": 18965,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2081:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:41:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18970,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:41:156"
                }
              ]
            },
            "documentation": {
              "id": 18962,
              "nodeType": "StructuredDocumentation",
              "src": "1953:63:156",
              "text": " @dev Throws if the contract is not paused."
            },
            "id": 18972,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requirePaused",
            "nameLocation": "2031:14:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2045:2:156"
            },
            "returnParameters": {
              "id": 18964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:0:156"
            },
            "scope": 19005,
            "src": "2022:108:156",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18987,
              "nodeType": "Block",
              "src": "2323:69:156",
              "statements": [
                {
                  "expression": {
                    "id": 18980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18978,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18915,
                      "src": "2334:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 18979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2344:4:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2334:14:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18981,
                  "nodeType": "ExpressionStatement",
                  "src": "2334:14:156"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18983,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31166,
                          "src": "2371:10:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 18984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2371:12:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18982,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18908,
                      "src": "2364:6:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 18985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2364:20:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18986,
                  "nodeType": "EmitStatement",
                  "src": "2359:25:156"
                }
              ]
            },
            "documentation": {
              "id": 18973,
              "nodeType": "StructuredDocumentation",
              "src": "2138:130:156",
              "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
            },
            "id": 18988,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 18976,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 18975,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "2309:13:156"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18932,
                  "src": "2309:13:156"
                },
                "nodeType": "ModifierInvocation",
                "src": "2309:13:156"
              }
            ],
            "name": "_pause",
            "nameLocation": "2283:6:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2289:2:156"
            },
            "returnParameters": {
              "id": 18977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2323:0:156"
            },
            "scope": 19005,
            "src": "2274:118:156",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19003,
              "nodeType": "Block",
              "src": "2581:72:156",
              "statements": [
                {
                  "expression": {
                    "id": 18996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18994,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18915,
                      "src": "2592:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 18995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2602:5:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2592:15:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18997,
                  "nodeType": "ExpressionStatement",
                  "src": "2592:15:156"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18999,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31166,
                          "src": "2632:10:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 19000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2632:12:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18998,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18913,
                      "src": "2623:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 19001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2623:22:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19002,
                  "nodeType": "EmitStatement",
                  "src": "2618:27:156"
                }
              ]
            },
            "documentation": {
              "id": 18989,
              "nodeType": "StructuredDocumentation",
              "src": "2400:127:156",
              "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
            },
            "id": 19004,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 18992,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 18991,
                  "name": "whenPaused",
                  "nameLocations": [
                    "2570:10:156"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18940,
                  "src": "2570:10:156"
                },
                "nodeType": "ModifierInvocation",
                "src": "2570:10:156"
              }
            ],
            "name": "_unpause",
            "nameLocation": "2542:8:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2550:2:156"
            },
            "returnParameters": {
              "id": 18993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2581:0:156"
            },
            "scope": 19005,
            "src": "2533:120:156",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 19006,
        "src": "618:2038:156",
        "usedErrors": []
      }
    ],
    "src": "108:2550:156"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-22T16:34:03.003Z",
  "devdoc": {
    "details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the contract in unpaused state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}