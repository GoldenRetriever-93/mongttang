{
  "contractName": "IAccessControlDefaultAdminRules",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newDefaultAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "defaultAdminTransferDelayedUntil",
          "type": "uint48"
        }
      ],
      "name": "DefaultAdminRoleChangeStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdminDelay",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingDefaultAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdminTransferDelayedUntil",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "beginDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDefaultAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"defaultAdminTransferDelayedUntil\",\"type\":\"uint48\"}],\"name\":\"DefaultAdminRoleChangeStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"beginDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdminDelay\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdminTransferDelayedUntil\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingDefaultAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlDefaultAdminRules declared to support ERC165 detection. _Available since v4.9._\",\"events\":{\"DefaultAdminRoleChangeStarted(address,uint48)\":{\"details\":\"Emitted when a `DEFAULT_ADMIN_ROLE` transfer is started, setting `newDefaultAdmin` as the next default admin, which will have rights to claim the `DEFAULT_ADMIN_ROLE` after `defaultAdminTransferDelayedUntil` has passed.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"acceptDefaultAdminTransfer()\":{\"details\":\"Completes a `DEFAULT_ADMIN_ROLE` transfer. Requirements: - Caller should be the pending default admin. - `DEFAULT_ADMIN_ROLE` should be granted to the caller. - `DEFAULT_ADMIN_ROLE` should be revoked from the previous holder.\"},\"beginDefaultAdminTransfer(address)\":{\"details\":\"Starts a `DEFAULT_ADMIN_ROLE` transfer by setting a pending default admin and a timer to pass. Requirements: - Only can be called by the current `DEFAULT_ADMIN_ROLE` holder. Emits a {DefaultAdminRoleChangeStarted}.\"},\"cancelDefaultAdminTransfer()\":{\"details\":\"Cancels a `DEFAULT_ADMIN_ROLE` transfer. Requirements: - Can be called even after the timer has passed. - Can only be called by the current `DEFAULT_ADMIN_ROLE` holder.\"},\"defaultAdmin()\":{\"details\":\"Returns the address of the current `DEFAULT_ADMIN_ROLE` holder.\"},\"defaultAdminDelay()\":{\"details\":\"Returns the delay between each `DEFAULT_ADMIN_ROLE` transfer.\"},\"defaultAdminTransferDelayedUntil()\":{\"details\":\"Returns the timestamp after which the pending default admin can claim the `DEFAULT_ADMIN_ROLE`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"pendingDefaultAdmin()\":{\"details\":\"Returns the address of the pending `DEFAULT_ADMIN_ROLE` holder.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/access/IAccessControlDefaultAdminRules.sol\":\"IAccessControlDefaultAdminRules\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x0b56404e790f707db5050025dc791c21b785797824efaaf28e6613444408ac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2e606d98a2460b229dffb2eefb5417e8c3c5722cd509fb0700485d92d02b8c4\",\"dweb:/ipfs/QmXhJJ2FzxHZNtGXoif5QwBv1SCEgh866AxuUzUFCuHmSF\"]},\"project:/contracts/access/IAccessControlDefaultAdminRules.sol\":{\"keccak256\":\"0x29cea12d8b4335cb9435e94df9179791edfef20233928eb27285a9c677e7ffea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b470e9c6426312cf612e48933859d548f5babd4db93104ee70b891027bbae1d\",\"dweb:/ipfs/QmXxynwN5XG8HhUqUW29f5F2yWFLDiEn4fvqQp2RUNboh1\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.9.0 (access/IAccessControlDefaultAdminRules.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IAccessControl.sol\";\r\n\r\n/**\r\n * @dev External interface of AccessControlDefaultAdminRules declared to support ERC165 detection.\r\n *\r\n * _Available since v4.9._\r\n */\r\ninterface IAccessControlDefaultAdminRules is IAccessControl {\r\n    /**\r\n     * @dev Emitted when a `DEFAULT_ADMIN_ROLE` transfer is started, setting `newDefaultAdmin`\r\n     * as the next default admin, which will have rights to claim the `DEFAULT_ADMIN_ROLE`\r\n     * after `defaultAdminTransferDelayedUntil` has passed.\r\n     */\r\n    event DefaultAdminRoleChangeStarted(address indexed newDefaultAdmin, uint48 defaultAdminTransferDelayedUntil);\r\n\r\n    /**\r\n     * @dev Returns the delay between each `DEFAULT_ADMIN_ROLE` transfer.\r\n     */\r\n    function defaultAdminDelay() external view returns (uint48);\r\n\r\n    /**\r\n     * @dev Returns the address of the current `DEFAULT_ADMIN_ROLE` holder.\r\n     */\r\n    function defaultAdmin() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the address of the pending `DEFAULT_ADMIN_ROLE` holder.\r\n     */\r\n    function pendingDefaultAdmin() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the timestamp after which the pending default admin can claim the `DEFAULT_ADMIN_ROLE`.\r\n     */\r\n    function defaultAdminTransferDelayedUntil() external view returns (uint48);\r\n\r\n    /**\r\n     * @dev Starts a `DEFAULT_ADMIN_ROLE` transfer by setting a pending default admin\r\n     * and a timer to pass.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Only can be called by the current `DEFAULT_ADMIN_ROLE` holder.\r\n     *\r\n     * Emits a {DefaultAdminRoleChangeStarted}.\r\n     */\r\n    function beginDefaultAdminTransfer(address newAdmin) external;\r\n\r\n    /**\r\n     * @dev Completes a `DEFAULT_ADMIN_ROLE` transfer.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Caller should be the pending default admin.\r\n     * - `DEFAULT_ADMIN_ROLE` should be granted to the caller.\r\n     * - `DEFAULT_ADMIN_ROLE` should be revoked from the previous holder.\r\n     */\r\n    function acceptDefaultAdminTransfer() external;\r\n\r\n    /**\r\n     * @dev Cancels a `DEFAULT_ADMIN_ROLE` transfer.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Can be called even after the timer has passed.\r\n     * - Can only be called by the current `DEFAULT_ADMIN_ROLE` holder.\r\n     */\r\n    function cancelDefaultAdminTransfer() external;\r\n}\r\n",
  "sourcePath": "C:\\Users\\SSAFY\\Desktop\\S08P22A308\\smart-contracts\\contracts\\access\\IAccessControlDefaultAdminRules.sol",
  "ast": {
    "absolutePath": "project:/contracts/access/IAccessControlDefaultAdminRules.sol",
    "exportedSymbols": {
      "IAccessControl": [
        1354
      ],
      "IAccessControlDefaultAdminRules": [
        1406
      ]
    },
    "id": 1407,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1356,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "114:23:7"
      },
      {
        "absolutePath": "project:/contracts/access/IAccessControl.sol",
        "file": "./IAccessControl.sol",
        "id": 1357,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1407,
        "sourceUnit": 1355,
        "src": "141:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1359,
              "name": "IAccessControl",
              "nameLocations": [
                "362:14:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1354,
              "src": "362:14:7"
            },
            "id": 1360,
            "nodeType": "InheritanceSpecifier",
            "src": "362:14:7"
          }
        ],
        "canonicalName": "IAccessControlDefaultAdminRules",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1358,
          "nodeType": "StructuredDocumentation",
          "src": "175:140:7",
          "text": " @dev External interface of AccessControlDefaultAdminRules declared to support ERC165 detection.\n _Available since v4.9._"
        },
        "fullyImplemented": false,
        "id": 1406,
        "linearizedBaseContracts": [
          1406,
          1354
        ],
        "name": "IAccessControlDefaultAdminRules",
        "nameLocation": "327:31:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 1361,
              "nodeType": "StructuredDocumentation",
              "src": "384:261:7",
              "text": " @dev Emitted when a `DEFAULT_ADMIN_ROLE` transfer is started, setting `newDefaultAdmin`\n as the next default admin, which will have rights to claim the `DEFAULT_ADMIN_ROLE`\n after `defaultAdminTransferDelayedUntil` has passed."
            },
            "eventSelector": "7b9212e98c8e18c596950a8539e99b9ea86dbb0463058b751ed40924d50acb55",
            "id": 1367,
            "name": "DefaultAdminRoleChangeStarted",
            "nameLocation": "657:29:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1363,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newDefaultAdmin",
                  "nameLocation": "703:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "687:31:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1365,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "defaultAdminTransferDelayedUntil",
                  "nameLocation": "727:32:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "720:39:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 1364,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "686:74:7"
            },
            "src": "651:110:7"
          },
          {
            "documentation": {
              "id": 1368,
              "nodeType": "StructuredDocumentation",
              "src": "769:87:7",
              "text": " @dev Returns the delay between each `DEFAULT_ADMIN_ROLE` transfer."
            },
            "functionSelector": "cc8463c8",
            "id": 1373,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "defaultAdminDelay",
            "nameLocation": "871:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:2:7"
            },
            "returnParameters": {
              "id": 1372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1371,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1373,
                  "src": "914:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 1370,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "914:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "913:8:7"
            },
            "scope": 1406,
            "src": "862:60:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1374,
              "nodeType": "StructuredDocumentation",
              "src": "930:89:7",
              "text": " @dev Returns the address of the current `DEFAULT_ADMIN_ROLE` holder."
            },
            "functionSelector": "84ef8ffc",
            "id": 1379,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "defaultAdmin",
            "nameLocation": "1034:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1046:2:7"
            },
            "returnParameters": {
              "id": 1378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1377,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1379,
                  "src": "1072:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1071:9:7"
            },
            "scope": 1406,
            "src": "1025:56:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1380,
              "nodeType": "StructuredDocumentation",
              "src": "1089:89:7",
              "text": " @dev Returns the address of the pending `DEFAULT_ADMIN_ROLE` holder."
            },
            "functionSelector": "cf6eefb7",
            "id": 1385,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pendingDefaultAdmin",
            "nameLocation": "1193:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1212:2:7"
            },
            "returnParameters": {
              "id": 1384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1383,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "1238:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1237:9:7"
            },
            "scope": 1406,
            "src": "1184:63:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1386,
              "nodeType": "StructuredDocumentation",
              "src": "1255:121:7",
              "text": " @dev Returns the timestamp after which the pending default admin can claim the `DEFAULT_ADMIN_ROLE`."
            },
            "functionSelector": "7a33eb5d",
            "id": 1391,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "defaultAdminTransferDelayedUntil",
            "nameLocation": "1391:32:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1423:2:7"
            },
            "returnParameters": {
              "id": 1390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1389,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1391,
                  "src": "1449:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 1388,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1448:8:7"
            },
            "scope": 1406,
            "src": "1382:75:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1392,
              "nodeType": "StructuredDocumentation",
              "src": "1465:296:7",
              "text": " @dev Starts a `DEFAULT_ADMIN_ROLE` transfer by setting a pending default admin\n and a timer to pass.\n Requirements:\n - Only can be called by the current `DEFAULT_ADMIN_ROLE` holder.\n Emits a {DefaultAdminRoleChangeStarted}."
            },
            "functionSelector": "634e93da",
            "id": 1397,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "beginDefaultAdminTransfer",
            "nameLocation": "1776:25:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1394,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "1810:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1397,
                  "src": "1802:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1802:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1801:18:7"
            },
            "returnParameters": {
              "id": 1396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1828:0:7"
            },
            "scope": 1406,
            "src": "1767:62:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1398,
              "nodeType": "StructuredDocumentation",
              "src": "1837:299:7",
              "text": " @dev Completes a `DEFAULT_ADMIN_ROLE` transfer.\n Requirements:\n - Caller should be the pending default admin.\n - `DEFAULT_ADMIN_ROLE` should be granted to the caller.\n - `DEFAULT_ADMIN_ROLE` should be revoked from the previous holder."
            },
            "functionSelector": "cefc1429",
            "id": 1401,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "acceptDefaultAdminTransfer",
            "nameLocation": "2151:26:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2177:2:7"
            },
            "returnParameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2188:0:7"
            },
            "scope": 1406,
            "src": "2142:47:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1402,
              "nodeType": "StructuredDocumentation",
              "src": "2197:234:7",
              "text": " @dev Cancels a `DEFAULT_ADMIN_ROLE` transfer.\n Requirements:\n - Can be called even after the timer has passed.\n - Can only be called by the current `DEFAULT_ADMIN_ROLE` holder."
            },
            "functionSelector": "d602b9fd",
            "id": 1405,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cancelDefaultAdminTransfer",
            "nameLocation": "2446:26:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2472:2:7"
            },
            "returnParameters": {
              "id": 1404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2483:0:7"
            },
            "scope": 1406,
            "src": "2437:47:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1407,
        "src": "317:2170:7",
        "usedErrors": []
      }
    ],
    "src": "114:2375:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-23T05:45:08.045Z",
  "devdoc": {
    "details": "External interface of AccessControlDefaultAdminRules declared to support ERC165 detection. _Available since v4.9._",
    "events": {
      "DefaultAdminRoleChangeStarted(address,uint48)": {
        "details": "Emitted when a `DEFAULT_ADMIN_ROLE` transfer is started, setting `newDefaultAdmin` as the next default admin, which will have rights to claim the `DEFAULT_ADMIN_ROLE` after `defaultAdminTransferDelayedUntil` has passed."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      }
    },
    "kind": "dev",
    "methods": {
      "acceptDefaultAdminTransfer()": {
        "details": "Completes a `DEFAULT_ADMIN_ROLE` transfer. Requirements: - Caller should be the pending default admin. - `DEFAULT_ADMIN_ROLE` should be granted to the caller. - `DEFAULT_ADMIN_ROLE` should be revoked from the previous holder."
      },
      "beginDefaultAdminTransfer(address)": {
        "details": "Starts a `DEFAULT_ADMIN_ROLE` transfer by setting a pending default admin and a timer to pass. Requirements: - Only can be called by the current `DEFAULT_ADMIN_ROLE` holder. Emits a {DefaultAdminRoleChangeStarted}."
      },
      "cancelDefaultAdminTransfer()": {
        "details": "Cancels a `DEFAULT_ADMIN_ROLE` transfer. Requirements: - Can be called even after the timer has passed. - Can only be called by the current `DEFAULT_ADMIN_ROLE` holder."
      },
      "defaultAdmin()": {
        "details": "Returns the address of the current `DEFAULT_ADMIN_ROLE` holder."
      },
      "defaultAdminDelay()": {
        "details": "Returns the delay between each `DEFAULT_ADMIN_ROLE` transfer."
      },
      "defaultAdminTransferDelayedUntil()": {
        "details": "Returns the timestamp after which the pending default admin can claim the `DEFAULT_ADMIN_ROLE`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "pendingDefaultAdmin()": {
        "details": "Returns the address of the pending `DEFAULT_ADMIN_ROLE` holder."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}