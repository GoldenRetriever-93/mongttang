{
  "contractName": "IArbSys",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "uniqueId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "batchNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "indexInBatch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "arbBlockNum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethBlockNum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "callvalue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "L2ToL1Transaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hash",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "position",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "arbBlockNum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethBlockNum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "callvalue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "L2ToL1Tx",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "reserved",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "position",
          "type": "uint256"
        }
      ],
      "name": "SendMerkleUpdate",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "arbBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "arbBlockNum",
          "type": "uint256"
        }
      ],
      "name": "arbBlockHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "arbChainID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "arbOSVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStorageGasAvailable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTopLevelCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "unused",
          "type": "address"
        }
      ],
      "name": "mapL1SenderContractAddressToL2Alias",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wasMyCallersAddressAliased",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "myCallersAddressWithoutAliasing",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "withdrawEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "sendTxToL1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendMerkleTreeState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "partials",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"uniqueId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"indexInBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"arbBlockNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethBlockNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"callvalue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"L2ToL1Transaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hash\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"arbBlockNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethBlockNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"callvalue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"L2ToL1Tx\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"reserved\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"SendMerkleUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"arbBlockNum\",\"type\":\"uint256\"}],\"name\":\"arbBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbChainID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbOSVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageGasAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTopLevelCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"unused\",\"type\":\"address\"}],\"name\":\"mapL1SenderContractAddressToL2Alias\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myCallersAddressWithoutAliasing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendMerkleTreeState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"partials\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sendTxToL1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wasMyCallersAddressAliased\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"withdrawEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"L2ToL1Transaction(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"details\":\"DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\"},\"L2ToL1Tx(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"params\":{\"position\":\"= (level << 192) + leaf = (0 << 192) + leaf = leaf\"}},\"SendMerkleUpdate(uint256,bytes32,uint256)\":{\"params\":{\"hash\":\"the merkle hash\",\"position\":\"= (level << 192) + leaf\",\"reserved\":\"an index meant only to align the 4th index with L2ToL1Transaction's 4th event\"}}},\"kind\":\"dev\",\"methods\":{\"arbBlockHash(uint256)\":{\"returns\":{\"_0\":\"block hash\"}},\"arbBlockNumber()\":{\"returns\":{\"_0\":\"block number as int\"}},\"arbChainID()\":{\"returns\":{\"_0\":\"Chain identifier as int\"}},\"arbOSVersion()\":{\"returns\":{\"_0\":\"version number as int\"}},\"getStorageGasAvailable()\":{\"returns\":{\"_0\":\"uint 0\"}},\"isTopLevelCall()\":{\"details\":\"this call has been deprecated and may be removed in a future release\",\"returns\":{\"_0\":\"true if current execution frame is not a call by another L2 contract\"}},\"mapL1SenderContractAddressToL2Alias(address,address)\":{\"params\":{\"sender\":\"sender address\",\"unused\":\"argument no longer used\"},\"returns\":{\"_0\":\"aliased sender address\"}},\"myCallersAddressWithoutAliasing()\":{\"returns\":{\"_0\":\"address of the caller's caller, without applying L1 contract address aliasing\"}},\"sendMerkleTreeState()\":{\"returns\":{\"partials\":\"hashes of partial subtrees in the send history tree\",\"root\":\"root hash of the send history\",\"size\":\"number of sends in the history\"}},\"sendTxToL1(address,bytes)\":{\"details\":\"it is not possible to execute on the L1 any L2-to-L1 transaction which contains data to a contract address without any code (as enforced by the Bridge contract).\",\"params\":{\"data\":\"(optional) calldata for L1 contract call\",\"destination\":\"recipient address on L1\"},\"returns\":{\"_0\":\"a unique identifier for this L2-to-L1 transaction.\"}},\"wasMyCallersAddressAliased()\":{\"returns\":{\"_0\":\"true iff the caller's address is an alias for an L1 contract address\"}},\"withdrawEth(address)\":{\"params\":{\"destination\":\"recipient address on L1\"},\"returns\":{\"_0\":\"unique identifier for this L2-to-L1 transaction.\"}}},\"title\":\"System level functionality\",\"version\":1},\"userdoc\":{\"events\":{\"L2ToL1Tx(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"notice\":\"creates a send txn from L2 to L1\"},\"SendMerkleUpdate(uint256,bytes32,uint256)\":{\"notice\":\"logs a merkle branch for proof synthesis\"}},\"kind\":\"user\",\"methods\":{\"arbBlockHash(uint256)\":{\"notice\":\"Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\"},\"arbBlockNumber()\":{\"notice\":\"Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\"},\"arbChainID()\":{\"notice\":\"Gets the rollup's unique chain identifier\"},\"arbOSVersion()\":{\"notice\":\"Get internal version number identifying an ArbOS build\"},\"getStorageGasAvailable()\":{\"notice\":\"Returns 0 since Nitro has no concept of storage gas\"},\"isTopLevelCall()\":{\"notice\":\"(deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\"},\"mapL1SenderContractAddressToL2Alias(address,address)\":{\"notice\":\"map L1 sender contract address to its L2 alias\"},\"myCallersAddressWithoutAliasing()\":{\"notice\":\"return the address of the caller (of this caller of this), without applying L1 contract address aliasing\"},\"sendMerkleTreeState()\":{\"notice\":\"Get send Merkle tree state\"},\"sendTxToL1(address,bytes)\":{\"notice\":\"Send a transaction to L1\"},\"wasMyCallersAddressAliased()\":{\"notice\":\"check if the caller (of this caller of this) is an aliased L1 contract address\"},\"withdrawEth(address)\":{\"notice\":\"Send given amount of Eth to dest from sender. This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\"}},\"notice\":\"For use by contracts to interact with core L2-specific functionality. Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vendor/arbitrum/IArbSys.sol\":\"IArbSys\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/vendor/arbitrum/IArbSys.sol\":{\"keccak256\":\"0xb89dd723234b4d9ce13083eec9a530ceceeb618412bc3b7ac3d37d0a2a6874e0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e3a598a3cc3caa09d33bcf2a120d457b2f69d770c173055b42948210ae34643f\",\"dweb:/ipfs/QmXBgdEomTjn6L9pXEb8hUzwUJ5S9zAuZE5qQVtbJwWvBn\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// Copyright 2021-2022, Offchain Labs, Inc.\r\n// For license information, see https://github.com/OffchainLabs/nitro/blob/master/LICENSE\r\n// SPDX-License-Identifier: BUSL-1.1\r\n// OpenZeppelin Contracts (last updated v4.8.0) (vendor/arbitrum/IArbSys.sol)\r\n\r\npragma solidity >=0.4.21 <0.9.0;\r\n\r\n/**\r\n * @title System level functionality\r\n * @notice For use by contracts to interact with core L2-specific functionality.\r\n * Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\r\n */\r\ninterface IArbSys {\r\n    /**\r\n     * @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\r\n     * @return block number as int\r\n     */\r\n    function arbBlockNumber() external view returns (uint256);\r\n\r\n    /**\r\n     * @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\r\n     * @return block hash\r\n     */\r\n    function arbBlockHash(uint256 arbBlockNum) external view returns (bytes32);\r\n\r\n    /**\r\n     * @notice Gets the rollup's unique chain identifier\r\n     * @return Chain identifier as int\r\n     */\r\n    function arbChainID() external view returns (uint256);\r\n\r\n    /**\r\n     * @notice Get internal version number identifying an ArbOS build\r\n     * @return version number as int\r\n     */\r\n    function arbOSVersion() external view returns (uint256);\r\n\r\n    /**\r\n     * @notice Returns 0 since Nitro has no concept of storage gas\r\n     * @return uint 0\r\n     */\r\n    function getStorageGasAvailable() external view returns (uint256);\r\n\r\n    /**\r\n     * @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\r\n     * @dev this call has been deprecated and may be removed in a future release\r\n     * @return true if current execution frame is not a call by another L2 contract\r\n     */\r\n    function isTopLevelCall() external view returns (bool);\r\n\r\n    /**\r\n     * @notice map L1 sender contract address to its L2 alias\r\n     * @param sender sender address\r\n     * @param unused argument no longer used\r\n     * @return aliased sender address\r\n     */\r\n    function mapL1SenderContractAddressToL2Alias(address sender, address unused) external pure returns (address);\r\n\r\n    /**\r\n     * @notice check if the caller (of this caller of this) is an aliased L1 contract address\r\n     * @return true iff the caller's address is an alias for an L1 contract address\r\n     */\r\n    function wasMyCallersAddressAliased() external view returns (bool);\r\n\r\n    /**\r\n     * @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\r\n     * @return address of the caller's caller, without applying L1 contract address aliasing\r\n     */\r\n    function myCallersAddressWithoutAliasing() external view returns (address);\r\n\r\n    /**\r\n     * @notice Send given amount of Eth to dest from sender.\r\n     * This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\r\n     * @param destination recipient address on L1\r\n     * @return unique identifier for this L2-to-L1 transaction.\r\n     */\r\n    function withdrawEth(address destination) external payable returns (uint256);\r\n\r\n    /**\r\n     * @notice Send a transaction to L1\r\n     * @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\r\n     * to a contract address without any code (as enforced by the Bridge contract).\r\n     * @param destination recipient address on L1\r\n     * @param data (optional) calldata for L1 contract call\r\n     * @return a unique identifier for this L2-to-L1 transaction.\r\n     */\r\n    function sendTxToL1(address destination, bytes calldata data) external payable returns (uint256);\r\n\r\n    /**\r\n     * @notice Get send Merkle tree state\r\n     * @return size number of sends in the history\r\n     * @return root root hash of the send history\r\n     * @return partials hashes of partial subtrees in the send history tree\r\n     */\r\n    function sendMerkleTreeState() external view returns (uint256 size, bytes32 root, bytes32[] memory partials);\r\n\r\n    /**\r\n     * @notice creates a send txn from L2 to L1\r\n     * @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf\r\n     */\r\n    event L2ToL1Tx(\r\n        address caller,\r\n        address indexed destination,\r\n        uint256 indexed hash,\r\n        uint256 indexed position,\r\n        uint256 arbBlockNum,\r\n        uint256 ethBlockNum,\r\n        uint256 timestamp,\r\n        uint256 callvalue,\r\n        bytes data\r\n    );\r\n\r\n    /// @dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\r\n    event L2ToL1Transaction(\r\n        address caller,\r\n        address indexed destination,\r\n        uint256 indexed uniqueId,\r\n        uint256 indexed batchNumber,\r\n        uint256 indexInBatch,\r\n        uint256 arbBlockNum,\r\n        uint256 ethBlockNum,\r\n        uint256 timestamp,\r\n        uint256 callvalue,\r\n        bytes data\r\n    );\r\n\r\n    /**\r\n     * @notice logs a merkle branch for proof synthesis\r\n     * @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\r\n     * @param hash the merkle hash\r\n     * @param position = (level << 192) + leaf\r\n     */\r\n    event SendMerkleUpdate(uint256 indexed reserved, bytes32 indexed hash, uint256 indexed position);\r\n}\r\n",
  "sourcePath": "C:\\Users\\SSAFY\\Desktop\\S08P22A308\\smart-contracts\\contracts\\vendor\\arbitrum\\IArbSys.sol",
  "ast": {
    "absolutePath": "project:/contracts/vendor/arbitrum/IArbSys.sol",
    "exportedSymbols": {
      "IArbSys": [
        39705
      ]
    },
    "id": 39706,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 39561,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "255:32:249"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IArbSys",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 39562,
          "nodeType": "StructuredDocumentation",
          "src": "291:250:249",
          "text": " @title System level functionality\n @notice For use by contracts to interact with core L2-specific functionality.\n Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064."
        },
        "fullyImplemented": false,
        "id": 39705,
        "linearizedBaseContracts": [
          39705
        ],
        "name": "IArbSys",
        "nameLocation": "553:7:249",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 39563,
              "nodeType": "StructuredDocumentation",
              "src": "568:165:249",
              "text": " @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\n @return block number as int"
            },
            "functionSelector": "a3b1b31d",
            "id": 39568,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "arbBlockNumber",
            "nameLocation": "748:14:249",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "762:2:249"
            },
            "returnParameters": {
              "id": 39567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39566,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39568,
                  "src": "788:7:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "787:9:249"
            },
            "scope": 39705,
            "src": "739:58:249",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 39569,
              "nodeType": "StructuredDocumentation",
              "src": "805:149:249",
              "text": " @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\n @return block hash"
            },
            "functionSelector": "2b407a82",
            "id": 39576,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "arbBlockHash",
            "nameLocation": "969:12:249",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39571,
                  "mutability": "mutable",
                  "name": "arbBlockNum",
                  "nameLocation": "990:11:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39576,
                  "src": "982:19:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:21:249"
            },
            "returnParameters": {
              "id": 39575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39574,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39576,
                  "src": "1026:7:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39573,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1025:9:249"
            },
            "scope": 39705,
            "src": "960:75:249",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 39577,
              "nodeType": "StructuredDocumentation",
              "src": "1043:110:249",
              "text": " @notice Gets the rollup's unique chain identifier\n @return Chain identifier as int"
            },
            "functionSelector": "d127f54a",
            "id": 39582,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "arbChainID",
            "nameLocation": "1168:10:249",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1178:2:249"
            },
            "returnParameters": {
              "id": 39581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39580,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39582,
                  "src": "1204:7:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1203:9:249"
            },
            "scope": 39705,
            "src": "1159:54:249",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 39583,
              "nodeType": "StructuredDocumentation",
              "src": "1221:121:249",
              "text": " @notice Get internal version number identifying an ArbOS build\n @return version number as int"
            },
            "functionSelector": "051038f2",
            "id": 39588,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "arbOSVersion",
            "nameLocation": "1357:12:249",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1369:2:249"
            },
            "returnParameters": {
              "id": 39587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39586,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39588,
                  "src": "1395:7:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1394:9:249"
            },
            "scope": 39705,
            "src": "1348:56:249",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 39589,
              "nodeType": "StructuredDocumentation",
              "src": "1412:103:249",
              "text": " @notice Returns 0 since Nitro has no concept of storage gas\n @return uint 0"
            },
            "functionSelector": "a94597ff",
            "id": 39594,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageGasAvailable",
            "nameLocation": "1530:22:249",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1552:2:249"
            },
            "returnParameters": {
              "id": 39593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39592,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39594,
                  "src": "1578:7:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1577:9:249"
            },
            "scope": 39705,
            "src": "1521:66:249",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 39595,
              "nodeType": "StructuredDocumentation",
              "src": "1595:297:249",
              "text": " @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\n @dev this call has been deprecated and may be removed in a future release\n @return true if current execution frame is not a call by another L2 contract"
            },
            "functionSelector": "08bd624c",
            "id": 39600,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTopLevelCall",
            "nameLocation": "1907:14:249",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1921:2:249"
            },
            "returnParameters": {
              "id": 39599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39598,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39600,
                  "src": "1947:4:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39597,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1947:4:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1946:6:249"
            },
            "scope": 39705,
            "src": "1898:55:249",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 39601,
              "nodeType": "StructuredDocumentation",
              "src": "1961:197:249",
              "text": " @notice map L1 sender contract address to its L2 alias\n @param sender sender address\n @param unused argument no longer used\n @return aliased sender address"
            },
            "functionSelector": "4dbbd506",
            "id": 39610,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mapL1SenderContractAddressToL2Alias",
            "nameLocation": "2173:35:249",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39603,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2217:6:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39610,
                  "src": "2209:14:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2209:7:249",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39605,
                  "mutability": "mutable",
                  "name": "unused",
                  "nameLocation": "2233:6:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39610,
                  "src": "2225:14:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:7:249",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2208:32:249"
            },
            "returnParameters": {
              "id": 39609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39608,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39610,
                  "src": "2264:7:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2264:7:249",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2263:9:249"
            },
            "scope": 39705,
            "src": "2164:109:249",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 39611,
              "nodeType": "StructuredDocumentation",
              "src": "2281:192:249",
              "text": " @notice check if the caller (of this caller of this) is an aliased L1 contract address\n @return true iff the caller's address is an alias for an L1 contract address"
            },
            "functionSelector": "175a260b",
            "id": 39616,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "wasMyCallersAddressAliased",
            "nameLocation": "2488:26:249",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2514:2:249"
            },
            "returnParameters": {
              "id": 39615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39614,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39616,
                  "src": "2540:4:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39613,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2540:4:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2539:6:249"
            },
            "scope": 39705,
            "src": "2479:67:249",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 39617,
              "nodeType": "StructuredDocumentation",
              "src": "2554:227:249",
              "text": " @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\n @return address of the caller's caller, without applying L1 contract address aliasing"
            },
            "functionSelector": "d74523b3",
            "id": 39622,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "myCallersAddressWithoutAliasing",
            "nameLocation": "2796:31:249",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2827:2:249"
            },
            "returnParameters": {
              "id": 39621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39620,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39622,
                  "src": "2853:7:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2853:7:249",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2852:9:249"
            },
            "scope": 39705,
            "src": "2787:75:249",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 39623,
              "nodeType": "StructuredDocumentation",
              "src": "2870:289:249",
              "text": " @notice Send given amount of Eth to dest from sender.\n This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\n @param destination recipient address on L1\n @return unique identifier for this L2-to-L1 transaction."
            },
            "functionSelector": "25e16063",
            "id": 39630,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawEth",
            "nameLocation": "3174:11:249",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39625,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "3194:11:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39630,
                  "src": "3186:19:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3186:7:249",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3185:21:249"
            },
            "returnParameters": {
              "id": 39629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39628,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39630,
                  "src": "3233:7:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3233:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3232:9:249"
            },
            "scope": 39705,
            "src": "3165:77:249",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 39631,
              "nodeType": "StructuredDocumentation",
              "src": "3250:415:249",
              "text": " @notice Send a transaction to L1\n @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\n to a contract address without any code (as enforced by the Bridge contract).\n @param destination recipient address on L1\n @param data (optional) calldata for L1 contract call\n @return a unique identifier for this L2-to-L1 transaction."
            },
            "functionSelector": "928c169a",
            "id": 39640,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sendTxToL1",
            "nameLocation": "3680:10:249",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39633,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "3699:11:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39640,
                  "src": "3691:19:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3691:7:249",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39635,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3727:4:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39640,
                  "src": "3712:19:249",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 39634,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3712:5:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3690:42:249"
            },
            "returnParameters": {
              "id": 39639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39638,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39640,
                  "src": "3759:7:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3759:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3758:9:249"
            },
            "scope": 39705,
            "src": "3671:97:249",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 39641,
              "nodeType": "StructuredDocumentation",
              "src": "3776:235:249",
              "text": " @notice Get send Merkle tree state\n @return size number of sends in the history\n @return root root hash of the send history\n @return partials hashes of partial subtrees in the send history tree"
            },
            "functionSelector": "7aeecd2a",
            "id": 39651,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sendMerkleTreeState",
            "nameLocation": "4026:19:249",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4045:2:249"
            },
            "returnParameters": {
              "id": 39650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39644,
                  "mutability": "mutable",
                  "name": "size",
                  "nameLocation": "4079:4:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39651,
                  "src": "4071:12:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4071:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39646,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "4093:4:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39651,
                  "src": "4085:12:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39645,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4085:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39649,
                  "mutability": "mutable",
                  "name": "partials",
                  "nameLocation": "4116:8:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39651,
                  "src": "4099:25:249",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 39647,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4099:7:249",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 39648,
                    "nodeType": "ArrayTypeName",
                    "src": "4099:9:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4070:55:249"
            },
            "scope": 39705,
            "src": "4017:109:249",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 39652,
              "nodeType": "StructuredDocumentation",
              "src": "4134:136:249",
              "text": " @notice creates a send txn from L2 to L1\n @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf"
            },
            "eventSelector": "3e7aafa77dbf186b7fd488006beff893744caa3c4f6f299e8a709fa2087374fc",
            "id": 39672,
            "name": "L2ToL1Tx",
            "nameLocation": "4282:8:249",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 39671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39654,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "4309:6:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39672,
                  "src": "4301:14:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4301:7:249",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39656,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "4342:11:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39672,
                  "src": "4326:27:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4326:7:249",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39658,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "4380:4:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39672,
                  "src": "4364:20:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4364:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39660,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "position",
                  "nameLocation": "4411:8:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39672,
                  "src": "4395:24:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4395:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39662,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "arbBlockNum",
                  "nameLocation": "4438:11:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39672,
                  "src": "4430:19:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4430:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39664,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ethBlockNum",
                  "nameLocation": "4468:11:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39672,
                  "src": "4460:19:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4460:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39666,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "4498:9:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39672,
                  "src": "4490:17:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39665,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4490:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39668,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "callvalue",
                  "nameLocation": "4526:9:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39672,
                  "src": "4518:17:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4518:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39670,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4552:4:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39672,
                  "src": "4546:10:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 39669,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4546:5:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4290:273:249"
            },
            "src": "4276:288:249"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 39673,
              "nodeType": "StructuredDocumentation",
              "src": "4572:85:249",
              "text": "@dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade"
            },
            "eventSelector": "5baaa87db386365b5c161be377bc3d8e317e8d98d71a3ca7ed7d555340c8f767",
            "id": 39695,
            "name": "L2ToL1Transaction",
            "nameLocation": "4669:17:249",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 39694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39675,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "4705:6:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39695,
                  "src": "4697:14:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4697:7:249",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39677,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "4738:11:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39695,
                  "src": "4722:27:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4722:7:249",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39679,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "uniqueId",
                  "nameLocation": "4776:8:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39695,
                  "src": "4760:24:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4760:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39681,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "batchNumber",
                  "nameLocation": "4811:11:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39695,
                  "src": "4795:27:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4795:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39683,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "indexInBatch",
                  "nameLocation": "4841:12:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39695,
                  "src": "4833:20:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4833:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39685,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "arbBlockNum",
                  "nameLocation": "4872:11:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39695,
                  "src": "4864:19:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4864:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39687,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ethBlockNum",
                  "nameLocation": "4902:11:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39695,
                  "src": "4894:19:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4894:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39689,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "4932:9:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39695,
                  "src": "4924:17:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4924:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39691,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "callvalue",
                  "nameLocation": "4960:9:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39695,
                  "src": "4952:17:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4952:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39693,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4986:4:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39695,
                  "src": "4980:10:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 39692,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4980:5:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4686:311:249"
            },
            "src": "4663:335:249"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 39696,
              "nodeType": "StructuredDocumentation",
              "src": "5006:255:249",
              "text": " @notice logs a merkle branch for proof synthesis\n @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\n @param hash the merkle hash\n @param position = (level << 192) + leaf"
            },
            "eventSelector": "e9e13da364699fb5b0496ff5a0fc70760ad5836e93ba96568a4e42b9914a8b95",
            "id": 39704,
            "name": "SendMerkleUpdate",
            "nameLocation": "5273:16:249",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 39703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39698,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "reserved",
                  "nameLocation": "5306:8:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39704,
                  "src": "5290:24:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5290:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39700,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "5332:4:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39704,
                  "src": "5316:20:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39699,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5316:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39702,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "position",
                  "nameLocation": "5354:8:249",
                  "nodeType": "VariableDeclaration",
                  "scope": 39704,
                  "src": "5338:24:249",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5338:7:249",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5289:74:249"
            },
            "src": "5267:97:249"
          }
        ],
        "scope": 39706,
        "src": "543:4824:249",
        "usedErrors": []
      }
    ],
    "src": "255:5114:249"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-23T05:45:08.865Z",
  "devdoc": {
    "events": {
      "L2ToL1Transaction(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bytes)": {
        "details": "DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade"
      },
      "L2ToL1Tx(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes)": {
        "params": {
          "position": "= (level << 192) + leaf = (0 << 192) + leaf = leaf"
        }
      },
      "SendMerkleUpdate(uint256,bytes32,uint256)": {
        "params": {
          "hash": "the merkle hash",
          "position": "= (level << 192) + leaf",
          "reserved": "an index meant only to align the 4th index with L2ToL1Transaction's 4th event"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "arbBlockHash(uint256)": {
        "returns": {
          "_0": "block hash"
        }
      },
      "arbBlockNumber()": {
        "returns": {
          "_0": "block number as int"
        }
      },
      "arbChainID()": {
        "returns": {
          "_0": "Chain identifier as int"
        }
      },
      "arbOSVersion()": {
        "returns": {
          "_0": "version number as int"
        }
      },
      "getStorageGasAvailable()": {
        "returns": {
          "_0": "uint 0"
        }
      },
      "isTopLevelCall()": {
        "details": "this call has been deprecated and may be removed in a future release",
        "returns": {
          "_0": "true if current execution frame is not a call by another L2 contract"
        }
      },
      "mapL1SenderContractAddressToL2Alias(address,address)": {
        "params": {
          "sender": "sender address",
          "unused": "argument no longer used"
        },
        "returns": {
          "_0": "aliased sender address"
        }
      },
      "myCallersAddressWithoutAliasing()": {
        "returns": {
          "_0": "address of the caller's caller, without applying L1 contract address aliasing"
        }
      },
      "sendMerkleTreeState()": {
        "returns": {
          "partials": "hashes of partial subtrees in the send history tree",
          "root": "root hash of the send history",
          "size": "number of sends in the history"
        }
      },
      "sendTxToL1(address,bytes)": {
        "details": "it is not possible to execute on the L1 any L2-to-L1 transaction which contains data to a contract address without any code (as enforced by the Bridge contract).",
        "params": {
          "data": "(optional) calldata for L1 contract call",
          "destination": "recipient address on L1"
        },
        "returns": {
          "_0": "a unique identifier for this L2-to-L1 transaction."
        }
      },
      "wasMyCallersAddressAliased()": {
        "returns": {
          "_0": "true iff the caller's address is an alias for an L1 contract address"
        }
      },
      "withdrawEth(address)": {
        "params": {
          "destination": "recipient address on L1"
        },
        "returns": {
          "_0": "unique identifier for this L2-to-L1 transaction."
        }
      }
    },
    "title": "System level functionality",
    "version": 1
  },
  "userdoc": {
    "events": {
      "L2ToL1Tx(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes)": {
        "notice": "creates a send txn from L2 to L1"
      },
      "SendMerkleUpdate(uint256,bytes32,uint256)": {
        "notice": "logs a merkle branch for proof synthesis"
      }
    },
    "kind": "user",
    "methods": {
      "arbBlockHash(uint256)": {
        "notice": "Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)"
      },
      "arbBlockNumber()": {
        "notice": "Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)"
      },
      "arbChainID()": {
        "notice": "Gets the rollup's unique chain identifier"
      },
      "arbOSVersion()": {
        "notice": "Get internal version number identifying an ArbOS build"
      },
      "getStorageGasAvailable()": {
        "notice": "Returns 0 since Nitro has no concept of storage gas"
      },
      "isTopLevelCall()": {
        "notice": "(deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)"
      },
      "mapL1SenderContractAddressToL2Alias(address,address)": {
        "notice": "map L1 sender contract address to its L2 alias"
      },
      "myCallersAddressWithoutAliasing()": {
        "notice": "return the address of the caller (of this caller of this), without applying L1 contract address aliasing"
      },
      "sendMerkleTreeState()": {
        "notice": "Get send Merkle tree state"
      },
      "sendTxToL1(address,bytes)": {
        "notice": "Send a transaction to L1"
      },
      "wasMyCallersAddressAliased()": {
        "notice": "check if the caller (of this caller of this) is an aliased L1 contract address"
      },
      "withdrawEth(address)": {
        "notice": "Send given amount of Eth to dest from sender. This is a convenience function, which is equivalent to calling sendTxToL1 with empty data."
      }
    },
    "notice": "For use by contracts to interact with core L2-specific functionality. Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.",
    "version": 1
  }
}