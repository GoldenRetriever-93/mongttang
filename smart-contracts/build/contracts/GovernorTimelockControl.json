{
  "contractName": "GovernorTimelockControl",
  "abi": [
    {
      "inputs": [],
      "name": "Empty",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidShortString",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "StringTooLong",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "voteStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "voteEnd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldTimelock",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newTimelock",
          "type": "address"
        }
      ],
      "name": "TimelockChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        }
      ],
      "name": "VoteCastWithParams",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLOCK_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COUNTING_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EXTENDED_BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "cancel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        }
      ],
      "name": "castVoteWithReasonAndParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteWithReasonAndParamsBySig",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clock",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        }
      ],
      "name": "getVotesWithParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "relay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum IGovernor.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalEta",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "queue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TimelockController",
          "name": "newTimelock",
          "type": "address"
        }
      ],
      "name": "updateTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldTimelock\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTimelock\",\"type\":\"address\"}],\"name\":\"TimelockChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalEta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"queue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TimelockController\",\"name\":\"newTimelock\",\"type\":\"address\"}],\"name\":\"updateTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {Governor} that binds the execution process to an instance of {TimelockController}. This adds a delay, enforced by the {TimelockController} to all successful proposal (in addition to the voting duration). The {Governor} needs the proposer (and ideally the executor) roles for the {Governor} to work properly. Using this model means the proposal will be operated by the {TimelockController} and not by the {Governor}. Thus, the assets and permissions must be attached to the {TimelockController}. Any asset sent to the {Governor} will be inaccessible. WARNING: Setting up the TimelockController to have additional proposers besides the governor is very risky, as it grants them powers that they must be trusted or known not to use: 1) {onlyGovernance} functions like {relay} are available to them through the timelock, and 2) approved governance proposals can be blocked by them, effectively executing a Denial of Service attack. This risk will be mitigated in a future release. _Available since v4.3._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ProposalCanceled(uint256)\":{\"details\":\"Emitted when a proposal is canceled.\"},\"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)\":{\"details\":\"Emitted when a proposal is created.\"},\"ProposalExecuted(uint256)\":{\"details\":\"Emitted when a proposal is executed.\"},\"TimelockChange(address,address)\":{\"details\":\"Emitted when the timelock controller used for proposal execution is modified.\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"details\":\"Emitted when a vote is cast without params. Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used.\"},\"VoteCastWithParams(address,uint256,uint8,uint256,string,bytes)\":{\"details\":\"Emitted when a vote is cast with params. Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used. `params` are additional encoded parameters. Their interpepretation also depends on the voting module used.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"See EIP-6372.\"},\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"cancel(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-cancel}.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"clock()\":{\"details\":\"See {IERC6372}\"},\"constructor\":{\"details\":\"Set the timelock.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}.\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns whether `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalEta(uint256)\":{\"details\":\"Public accessor to check the eta of a queued proposal\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"queue(address[],uint256[],bytes[],bytes32)\":{\"details\":\"Function to queue a proposal to the timelock.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. NOTE: The `timepoint` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this timepoint (see {ERC20Votes}).\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"state(uint256)\":{\"details\":\"Overridden version of the {Governor-state} function with added support for the `Queued` status.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"timelock()\":{\"details\":\"Public accessor to check the address of the timelock\"},\"updateTimelock(address)\":{\"details\":\"Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates must be proposed, scheduled, and executed through governance proposals. CAUTION: It is not recommended to change the timelock while there are other queued governance proposals.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"Delay, between the proposal is created and the vote starts. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. This can be increased to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay, between the vote start and vote ends. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CLOCK_MODE()\":{\"notice\":\"module:core\"},\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"clock()\":{\"notice\":\"module:core\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/governance/extensions/GovernorTimelockControl.sol\":\"GovernorTimelockControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc4d7b1445a7a428e1690bb722993871f1746c14ac8da53f19d0ae02f2c83eee6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8c25c314c0dc5fc1a46427f47840b4cade497d7f0840b480498e14d7d571088\",\"dweb:/ipfs/QmetjrbpvzYYjQBmSUWqxKKZrbPiTSiGGLz6vpX5t8QfqE\"]},\"project:/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x0b56404e790f707db5050025dc791c21b785797824efaaf28e6613444408ac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2e606d98a2460b229dffb2eefb5417e8c3c5722cd509fb0700485d92d02b8c4\",\"dweb:/ipfs/QmXhJJ2FzxHZNtGXoif5QwBv1SCEgh866AxuUzUFCuHmSF\"]},\"project:/contracts/governance/Governor.sol\":{\"keccak256\":\"0x95f878aa3f14639d59a7a6d5133f8f5411bd4daedb8b08b2c13678c41d60979a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86abe2c142312565492adc320fdf767dd1ee12861a9888648788fa88b0a9f52c\",\"dweb:/ipfs/QmVJXH1P4hYxvCcFsBSaiDw6CqyRY7nmdM7r725g7BXW4a\"]},\"project:/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0xadaff2982e10025ac6770d4b1f9718c33b1bd8e5c5584c56c70d55fa9f83e5dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bef9d9b3032a3194828cd42fc03bcf781855805788699e269d872763e8d1761e\",\"dweb:/ipfs/QmYu5Q8wah6d6dPnJzh5T9Wz8TFGLXTGtgBpJC4VuhLMVb\"]},\"project:/contracts/governance/TimelockController.sol\":{\"keccak256\":\"0xb28392bb861b92a83d7f9bc0098fa8539334261475f6472389df1dcd8d82fcfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd11f016dc0ed2b39114ec7f4b75dc209a8b8042adfa2cd7a8ff9fd54e2607df\",\"dweb:/ipfs/QmWQ1DEcpVout6ddLiT2DyJrSa93h7jxzfm5niWoWo6SDA\"]},\"project:/contracts/governance/extensions/GovernorTimelockControl.sol\":{\"keccak256\":\"0xf4bff27217a235b97c1ded4d718de3a05257d4b1455293d33daf083f350bfdd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://346a4e121fb7967fbfd32fddb686c6b9f65a3b329915f6b623848788e1ef2c5b\",\"dweb:/ipfs/QmTopvadcgPsqbqTjdtL6GedcYPAma86pNA9CoKVmhkoLQ\"]},\"project:/contracts/governance/extensions/IGovernorTimelock.sol\":{\"keccak256\":\"0x1438a67e00a03534c9d6f0da883eda5dd810f30fac5a00448148e4669c1cd6a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://483ad7d34728092cc19fb67b3780674e5a26b861a613de24f7b0145fd9683a32\",\"dweb:/ipfs/QmQYW1hpanrdjih2BHdQ43M25WdYYkxT63SzqBSPYbvkPD\"]},\"project:/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x8045f7d526dd93c933f0f46b1637bace1ecb8282f150e004ada0bda898f8715f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://643d0f5beb2b0ce2e6c962b3fa87ca94333cf6237be8187460f5202d2813b1a3\",\"dweb:/ipfs/QmTPAqFeEVDnoJWm64DF2C53zfVBJZZC31wdGEeM8adGRE\"]},\"project:/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xcdb57c76c32afc434d935ea6e897ad9b0ddb697bf2747e27daea65617cfda04f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://260b53aee558318a64d445978ae3193cb0ef78a05a01896c80322c81bee9c4a8\",\"dweb:/ipfs/QmTubTrirdEPBmeebeykjemr4KRBSJFTpxXUP7ViKMXr9B\"]},\"project:/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0x8637f99b3c8fa9c6a29742f6323d62ae3728922e66a032d06e9857bfb80f41b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f7d69df67e81d1964a1af8b5f7fc217f78dbecbf61276411b47b5acc80cb425\",\"dweb:/ipfs/Qmb2Xhq9ZSN1aTf5WqYG7CJdcqujaFhuwM52M3uWC91cq2\"]},\"project:/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x93c3ecba425886b8933e548ed3adbfc56e40ff66f5c60532458fb06ba81598e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62c825197992648dca38edb1db345c0b5fd9e68f7eca893101f45b9cae25acfd\",\"dweb:/ipfs/QmdzBQtYLpjnVd17qUC3b7YXAGyoRFqKGQKjCJXPumxGss\"]},\"project:/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xc97c28f24caed758d150587f1e57753705c2439f314ac47947739869c4413819\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2319c1a8e34937da319c0a443a3fa9567994a9fc327be7186c7738573bcfa2f\",\"dweb:/ipfs/QmTSesyJCFLrjSJm5FoVLR1kXM26CnxVy1Ti9HHx31ZyJ2\"]},\"project:/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d0843efe7418f685e662378051ca0572b56e8ed4e87b97197fb535839d0e2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0692e4d4981ff36bf331a6dda3f60abe2debce9233df65e807639dc7cda713\",\"dweb:/ipfs/QmeKRcBH8LegzqrtdTtEhZLyYeb7PFkAtChNbLA3fTkbKW\"]},\"project:/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"project:/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xb14ce92457f0a59f4cb152f117d20438eecfb595367f73f78b0f57dc579bd17f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e1804ab46bf92ee79c19ba2807e209c182d4272e59bd76077a686d504839b8\",\"dweb:/ipfs/QmSoP3EsV1DwokLto927evyRceXDY6MZiR9YVVACg7t2GJ\"]},\"project:/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x9e72a3f862ef500b5c5a2a241075bd6c1070ed4de7a62c3deeafef8890480494\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c95ea4a4cd2c57b91fcb126cf6983a1c5b88371e4786083d3a9582e9055ca81\",\"dweb:/ipfs/QmWVkPSyZCiJ6vq4bWEMPE2Prx3oeBUy4BzGMgtA3SeVoP\"]},\"project:/contracts/utils/Strings.sol\":{\"keccak256\":\"0xb78b0cc4c1026e12f332826c899d4a2fe95efb409b4e5192d1c78dd86fcbf994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2e624dfd194788292303f0b741eda54ff242fe266add1ca1b8870769ea0691\",\"dweb:/ipfs/QmXU7XYSRJGkrjhvnKuTMpwA6VbqASbiDYkGgUhhHwdGp5\"]},\"project:/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x0f16f5ebac27a3d30a830680121568e67322449842f1fc4029016407101b99b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5de772343c81cbed88a5f5c8dad450de83809592f217b759c343e09d57eeaff\",\"dweb:/ipfs/QmPUTNyPobWF5umfFYesvXCWPfHbPLxY6BDMdpQxnPM5Ax\"]},\"project:/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x368840f65c193b42cb4b16bce08ec563bd5993389b7579be0050487ad69359ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b59dcb1b77cb026c2ef831ecc067c82b0746ec5f16f9c457754298e08ff0e6ff\",\"dweb:/ipfs/QmanRm2m1FmUnMakCjk1ttfqEjpR1HS3povo5zDtDQAAxT\"]},\"project:/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"project:/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"project:/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xc32ad0bcf24ae2b3fcf3d011f58541c7403a478598e2b6ba1e5a7d362a1aef23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1785f66e9850ec2d9a908075efeffaccc4747db702317ac4fb3918a140808838\",\"dweb:/ipfs/QmR8m2pbHatLxvaGpKU2AEym1q4VXqHbCmGdt6GSa9BFah\"]},\"project:/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x2c66e95ab107fd79a1c7f05348351ed954edf544854adf782c8b61bc67ecc074\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a069ca7a560c518d1338c48bf0618499ef601d34044c10f59a18b1e554cae37\",\"dweb:/ipfs/QmRXxKoq1Q47zpMcbCevkyUmV66zQcAcCrwhEQ2xtSvRQ1\"]},\"project:/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7b249694790ca2ae6a813e28025e0ebb9bccb5940a6cba637911fd9c17012055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2431f8875ede10b23dee66740a19fb1b2aa7cf57ea8430e7bce97be414c58748\",\"dweb:/ipfs/QmbCvNgrYi2kk7wBKJkwyRRrbwabhoxaNJjyK5frPkNvng\"]},\"project:/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xd87a074690b253bda417ba82dff7b32fd822d7a72929e3bb37f7b530aa569da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://477fb9daed74246661a2bac9075262d166b64b228e367ca380baeebe80010510\",\"dweb:/ipfs/QmSiXEtsWcdsaXZ6Feo2MfZpjAtvAc8rTc3v26fpcDBkxi\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (governance/extensions/GovernorTimelockControl.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IGovernorTimelock.sol\";\r\nimport \"../Governor.sol\";\r\nimport \"../TimelockController.sol\";\r\n\r\n/**\r\n * @dev Extension of {Governor} that binds the execution process to an instance of {TimelockController}. This adds a\r\n * delay, enforced by the {TimelockController} to all successful proposal (in addition to the voting duration). The\r\n * {Governor} needs the proposer (and ideally the executor) roles for the {Governor} to work properly.\r\n *\r\n * Using this model means the proposal will be operated by the {TimelockController} and not by the {Governor}. Thus,\r\n * the assets and permissions must be attached to the {TimelockController}. Any asset sent to the {Governor} will be\r\n * inaccessible.\r\n *\r\n * WARNING: Setting up the TimelockController to have additional proposers besides the governor is very risky, as it\r\n * grants them powers that they must be trusted or known not to use: 1) {onlyGovernance} functions like {relay} are\r\n * available to them through the timelock, and 2) approved governance proposals can be blocked by them, effectively\r\n * executing a Denial of Service attack. This risk will be mitigated in a future release.\r\n *\r\n * _Available since v4.3._\r\n */\r\nabstract contract GovernorTimelockControl is IGovernorTimelock, Governor {\r\n    TimelockController private _timelock;\r\n    mapping(uint256 => bytes32) private _timelockIds;\r\n\r\n    /**\r\n     * @dev Emitted when the timelock controller used for proposal execution is modified.\r\n     */\r\n    event TimelockChange(address oldTimelock, address newTimelock);\r\n\r\n    /**\r\n     * @dev Set the timelock.\r\n     */\r\n    constructor(TimelockController timelockAddress) {\r\n        _updateTimelock(timelockAddress);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, Governor) returns (bool) {\r\n        return interfaceId == type(IGovernorTimelock).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev Overridden version of the {Governor-state} function with added support for the `Queued` status.\r\n     */\r\n    function state(uint256 proposalId) public view virtual override(IGovernor, Governor) returns (ProposalState) {\r\n        ProposalState status = super.state(proposalId);\r\n\r\n        if (status != ProposalState.Succeeded) {\r\n            return status;\r\n        }\r\n\r\n        // core tracks execution, so we just have to check if successful proposal have been queued.\r\n        bytes32 queueid = _timelockIds[proposalId];\r\n        if (queueid == bytes32(0)) {\r\n            return status;\r\n        } else if (_timelock.isOperationDone(queueid)) {\r\n            return ProposalState.Executed;\r\n        } else if (_timelock.isOperationPending(queueid)) {\r\n            return ProposalState.Queued;\r\n        } else {\r\n            return ProposalState.Canceled;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Public accessor to check the address of the timelock\r\n     */\r\n    function timelock() public view virtual override returns (address) {\r\n        return address(_timelock);\r\n    }\r\n\r\n    /**\r\n     * @dev Public accessor to check the eta of a queued proposal\r\n     */\r\n    function proposalEta(uint256 proposalId) public view virtual override returns (uint256) {\r\n        uint256 eta = _timelock.getTimestamp(_timelockIds[proposalId]);\r\n        return eta == 1 ? 0 : eta; // _DONE_TIMESTAMP (1) should be replaced with a 0 value\r\n    }\r\n\r\n    /**\r\n     * @dev Function to queue a proposal to the timelock.\r\n     */\r\n    function queue(\r\n        address[] memory targets,\r\n        uint256[] memory values,\r\n        bytes[] memory calldatas,\r\n        bytes32 descriptionHash\r\n    ) public virtual override returns (uint256) {\r\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\r\n\r\n        require(state(proposalId) == ProposalState.Succeeded, \"Governor: proposal not successful\");\r\n\r\n        uint256 delay = _timelock.getMinDelay();\r\n        _timelockIds[proposalId] = _timelock.hashOperationBatch(targets, values, calldatas, 0, descriptionHash);\r\n        _timelock.scheduleBatch(targets, values, calldatas, 0, descriptionHash, delay);\r\n\r\n        emit ProposalQueued(proposalId, block.timestamp + delay);\r\n\r\n        return proposalId;\r\n    }\r\n\r\n    /**\r\n     * @dev Overridden execute function that run the already queued proposal through the timelock.\r\n     */\r\n    function _execute(\r\n        uint256 /* proposalId */,\r\n        address[] memory targets,\r\n        uint256[] memory values,\r\n        bytes[] memory calldatas,\r\n        bytes32 descriptionHash\r\n    ) internal virtual override {\r\n        _timelock.executeBatch{value: msg.value}(targets, values, calldatas, 0, descriptionHash);\r\n    }\r\n\r\n    /**\r\n     * @dev Overridden version of the {Governor-_cancel} function to cancel the timelocked proposal if it as already\r\n     * been queued.\r\n     */\r\n    // This function can reenter through the external call to the timelock, but we assume the timelock is trusted and\r\n    // well behaved (according to TimelockController) and this will not happen.\r\n    // slither-disable-next-line reentrancy-no-eth\r\n    function _cancel(\r\n        address[] memory targets,\r\n        uint256[] memory values,\r\n        bytes[] memory calldatas,\r\n        bytes32 descriptionHash\r\n    ) internal virtual override returns (uint256) {\r\n        uint256 proposalId = super._cancel(targets, values, calldatas, descriptionHash);\r\n\r\n        if (_timelockIds[proposalId] != 0) {\r\n            _timelock.cancel(_timelockIds[proposalId]);\r\n            delete _timelockIds[proposalId];\r\n        }\r\n\r\n        return proposalId;\r\n    }\r\n\r\n    /**\r\n     * @dev Address through which the governor executes action. In this case, the timelock.\r\n     */\r\n    function _executor() internal view virtual override returns (address) {\r\n        return address(_timelock);\r\n    }\r\n\r\n    /**\r\n     * @dev Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates\r\n     * must be proposed, scheduled, and executed through governance proposals.\r\n     *\r\n     * CAUTION: It is not recommended to change the timelock while there are other queued governance proposals.\r\n     */\r\n    function updateTimelock(TimelockController newTimelock) external virtual onlyGovernance {\r\n        _updateTimelock(newTimelock);\r\n    }\r\n\r\n    function _updateTimelock(TimelockController newTimelock) private {\r\n        emit TimelockChange(address(_timelock), address(newTimelock));\r\n        _timelock = newTimelock;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\SSAFY\\Desktop\\S08P22A308\\smart-contracts\\contracts\\governance\\extensions\\GovernorTimelockControl.sol",
  "ast": {
    "absolutePath": "project:/contracts/governance/extensions/GovernorTimelockControl.sol",
    "exportedSymbols": {
      "AccessControl": [
        688
      ],
      "Address": [
        29524
      ],
      "Context": [
        31290
      ],
      "DoubleEndedQueue": [
        37568
      ],
      "ECDSA": [
        32635
      ],
      "EIP712": [
        32839
      ],
      "ERC165": [
        33781
      ],
      "Governor": [
        4352
      ],
      "GovernorTimelockControl": [
        8094
      ],
      "IAccessControl": [
        1354
      ],
      "IERC1155Receiver": [
        20633
      ],
      "IERC165": [
        34097
      ],
      "IERC5267": [
        9634
      ],
      "IERC6372": [
        9668
      ],
      "IERC721Receiver": [
        26192
      ],
      "IGovernor": [
        4683
      ],
      "IGovernorTimelock": [
        8537
      ],
      "Math": [
        35067
      ],
      "SafeCast": [
        36608
      ],
      "ShortString": [
        31505
      ],
      "ShortStrings": [
        31716
      ],
      "SignedMath": [
        37025
      ],
      "StorageSlot": [
        31826
      ],
      "Strings": [
        32055
      ],
      "TimelockController": [
        5630
      ]
    },
    "id": 8095,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7719,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "136:23:34"
      },
      {
        "absolutePath": "project:/contracts/governance/extensions/IGovernorTimelock.sol",
        "file": "./IGovernorTimelock.sol",
        "id": 7720,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8095,
        "sourceUnit": 8538,
        "src": "163:33:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/Governor.sol",
        "file": "../Governor.sol",
        "id": 7721,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8095,
        "sourceUnit": 4353,
        "src": "198:25:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/TimelockController.sol",
        "file": "../TimelockController.sol",
        "id": 7722,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8095,
        "sourceUnit": 5631,
        "src": "225:35:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7724,
              "name": "IGovernorTimelock",
              "nameLocations": [
                "1395:17:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8537,
              "src": "1395:17:34"
            },
            "id": 7725,
            "nodeType": "InheritanceSpecifier",
            "src": "1395:17:34"
          },
          {
            "baseName": {
              "id": 7726,
              "name": "Governor",
              "nameLocations": [
                "1414:8:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4352,
              "src": "1414:8:34"
            },
            "id": 7727,
            "nodeType": "InheritanceSpecifier",
            "src": "1414:8:34"
          }
        ],
        "canonicalName": "GovernorTimelockControl",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7723,
          "nodeType": "StructuredDocumentation",
          "src": "264:1084:34",
          "text": " @dev Extension of {Governor} that binds the execution process to an instance of {TimelockController}. This adds a\n delay, enforced by the {TimelockController} to all successful proposal (in addition to the voting duration). The\n {Governor} needs the proposer (and ideally the executor) roles for the {Governor} to work properly.\n Using this model means the proposal will be operated by the {TimelockController} and not by the {Governor}. Thus,\n the assets and permissions must be attached to the {TimelockController}. Any asset sent to the {Governor} will be\n inaccessible.\n WARNING: Setting up the TimelockController to have additional proposers besides the governor is very risky, as it\n grants them powers that they must be trusted or known not to use: 1) {onlyGovernance} functions like {relay} are\n available to them through the timelock, and 2) approved governance proposals can be blocked by them, effectively\n executing a Denial of Service attack. This risk will be mitigated in a future release.\n _Available since v4.3._"
        },
        "fullyImplemented": false,
        "id": 8094,
        "linearizedBaseContracts": [
          8094,
          4352,
          20633,
          26192,
          8537,
          4683,
          9668,
          32839,
          9634,
          33781,
          34097,
          31290
        ],
        "name": "GovernorTimelockControl",
        "nameLocation": "1368:23:34",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7730,
            "mutability": "mutable",
            "name": "_timelock",
            "nameLocation": "1457:9:34",
            "nodeType": "VariableDeclaration",
            "scope": 8094,
            "src": "1430:36:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TimelockController_$5630",
              "typeString": "contract TimelockController"
            },
            "typeName": {
              "id": 7729,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7728,
                "name": "TimelockController",
                "nameLocations": [
                  "1430:18:34"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5630,
                "src": "1430:18:34"
              },
              "referencedDeclaration": 5630,
              "src": "1430:18:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimelockController_$5630",
                "typeString": "contract TimelockController"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7734,
            "mutability": "mutable",
            "name": "_timelockIds",
            "nameLocation": "1509:12:34",
            "nodeType": "VariableDeclaration",
            "scope": 8094,
            "src": "1473:48:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 7733,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 7731,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1481:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1473:27:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 7732,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1492:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7735,
              "nodeType": "StructuredDocumentation",
              "src": "1530:103:34",
              "text": " @dev Emitted when the timelock controller used for proposal execution is modified."
            },
            "eventSelector": "08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401",
            "id": 7741,
            "name": "TimelockChange",
            "nameLocation": "1645:14:34",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7737,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldTimelock",
                  "nameLocation": "1668:11:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "1660:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1660:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7739,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newTimelock",
                  "nameLocation": "1689:11:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "1681:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1659:42:34"
            },
            "src": "1639:63:34"
          },
          {
            "body": {
              "id": 7752,
              "nodeType": "Block",
              "src": "1807:51:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7749,
                        "name": "timelockAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7745,
                        "src": "1834:15:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5630",
                          "typeString": "contract TimelockController"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TimelockController_$5630",
                          "typeString": "contract TimelockController"
                        }
                      ],
                      "id": 7748,
                      "name": "_updateTimelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8093,
                      "src": "1818:15:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TimelockController_$5630_$returns$__$",
                        "typeString": "function (contract TimelockController)"
                      }
                    },
                    "id": 7750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1818:32:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7751,
                  "nodeType": "ExpressionStatement",
                  "src": "1818:32:34"
                }
              ]
            },
            "documentation": {
              "id": 7742,
              "nodeType": "StructuredDocumentation",
              "src": "1710:43:34",
              "text": " @dev Set the timelock."
            },
            "id": 7753,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7745,
                  "mutability": "mutable",
                  "name": "timelockAddress",
                  "nameLocation": "1790:15:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7753,
                  "src": "1771:34:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TimelockController_$5630",
                    "typeString": "contract TimelockController"
                  },
                  "typeName": {
                    "id": 7744,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7743,
                      "name": "TimelockController",
                      "nameLocations": [
                        "1771:18:34"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5630,
                      "src": "1771:18:34"
                    },
                    "referencedDeclaration": 5630,
                    "src": "1771:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TimelockController_$5630",
                      "typeString": "contract TimelockController"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1770:36:34"
            },
            "returnParameters": {
              "id": 7747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1807:0:34"
            },
            "scope": 8094,
            "src": "1759:99:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3167,
              34096
            ],
            "body": {
              "id": 7776,
              "nodeType": "Block",
              "src": "2040:116:34",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 7774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 7769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 7764,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7756,
                        "src": "2058:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7766,
                              "name": "IGovernorTimelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8537,
                              "src": "2078:17:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IGovernorTimelock_$8537_$",
                                "typeString": "type(contract IGovernorTimelock)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IGovernorTimelock_$8537_$",
                                "typeString": "type(contract IGovernorTimelock)"
                              }
                            ],
                            "id": 7765,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "2073:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 7767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2073:23:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IGovernorTimelock_$8537",
                            "typeString": "type(contract IGovernorTimelock)"
                          }
                        },
                        "id": 7768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2097:11:34",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2073:35:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2058:50:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 7772,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7756,
                          "src": "2136:11:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 7770,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967271,
                          "src": "2112:5:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_GovernorTimelockControl_$8094_$",
                            "typeString": "type(contract super GovernorTimelockControl)"
                          }
                        },
                        "id": 7771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2118:17:34",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3167,
                        "src": "2112:23:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 7773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2112:36:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2058:90:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7763,
                  "id": 7775,
                  "nodeType": "Return",
                  "src": "2051:97:34"
                }
              ]
            },
            "documentation": {
              "id": 7754,
              "nodeType": "StructuredDocumentation",
              "src": "1866:58:34",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 7777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1939:17:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7760,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 7758,
                  "name": "IERC165",
                  "nameLocations": [
                    "2006:7:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34097,
                  "src": "2006:7:34"
                },
                {
                  "id": 7759,
                  "name": "Governor",
                  "nameLocations": [
                    "2015:8:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4352,
                  "src": "2015:8:34"
                }
              ],
              "src": "1997:27:34"
            },
            "parameters": {
              "id": 7757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7756,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1964:11:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7777,
                  "src": "1957:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7755,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1957:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1956:20:34"
            },
            "returnParameters": {
              "id": 7763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7762,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7777,
                  "src": "2034:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7761,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2033:6:34"
            },
            "scope": 8094,
            "src": "1930:226:34",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3309,
              4491
            ],
            "body": {
              "id": 7843,
              "nodeType": "Block",
              "src": "2400:656:34",
              "statements": [
                {
                  "assignments": [
                    7791
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7791,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "2425:6:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 7843,
                      "src": "2411:20:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalState_$4370",
                        "typeString": "enum IGovernor.ProposalState"
                      },
                      "typeName": {
                        "id": 7790,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7789,
                          "name": "ProposalState",
                          "nameLocations": [
                            "2411:13:34"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4370,
                          "src": "2411:13:34"
                        },
                        "referencedDeclaration": 4370,
                        "src": "2411:13:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalState_$4370",
                          "typeString": "enum IGovernor.ProposalState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7796,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7794,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7780,
                        "src": "2446:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7792,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2434:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GovernorTimelockControl_$8094_$",
                          "typeString": "type(contract super GovernorTimelockControl)"
                        }
                      },
                      "id": 7793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2440:5:34",
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3309,
                      "src": "2434:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$4370_$",
                        "typeString": "function (uint256) view returns (enum IGovernor.ProposalState)"
                      }
                    },
                    "id": 7795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2434:23:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalState_$4370",
                      "typeString": "enum IGovernor.ProposalState"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2411:46:34"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_ProposalState_$4370",
                      "typeString": "enum IGovernor.ProposalState"
                    },
                    "id": 7800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7797,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7791,
                      "src": "2474:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalState_$4370",
                        "typeString": "enum IGovernor.ProposalState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 7798,
                        "name": "ProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4370,
                        "src": "2484:13:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProposalState_$4370_$",
                          "typeString": "type(enum IGovernor.ProposalState)"
                        }
                      },
                      "id": 7799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2498:9:34",
                      "memberName": "Succeeded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4366,
                      "src": "2484:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalState_$4370",
                        "typeString": "enum IGovernor.ProposalState"
                      }
                    },
                    "src": "2474:33:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7804,
                  "nodeType": "IfStatement",
                  "src": "2470:79:34",
                  "trueBody": {
                    "id": 7803,
                    "nodeType": "Block",
                    "src": "2509:40:34",
                    "statements": [
                      {
                        "expression": {
                          "id": 7801,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7791,
                          "src": "2531:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$4370",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "functionReturnParameters": 7788,
                        "id": 7802,
                        "nodeType": "Return",
                        "src": "2524:13:34"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    7806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7806,
                      "mutability": "mutable",
                      "name": "queueid",
                      "nameLocation": "2670:7:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 7843,
                      "src": "2662:15:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7805,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2662:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7810,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7807,
                      "name": "_timelockIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7734,
                      "src": "2680:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 7809,
                    "indexExpression": {
                      "id": 7808,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7780,
                      "src": "2693:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2680:24:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2662:42:34"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 7816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7811,
                      "name": "queueid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7806,
                      "src": "2719:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2738:1:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2730:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 7812,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2730:7:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2730:10:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2719:21:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 7822,
                          "name": "queueid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7806,
                          "src": "2818:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 7820,
                          "name": "_timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7730,
                          "src": "2792:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TimelockController_$5630",
                            "typeString": "contract TimelockController"
                          }
                        },
                        "id": 7821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2802:15:34",
                        "memberName": "isOperationDone",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5010,
                        "src": "2792:25:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (bytes32) view external returns (bool)"
                        }
                      },
                      "id": 7823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2792:34:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "arguments": [
                          {
                            "id": 7830,
                            "name": "queueid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7806,
                            "src": "2923:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7828,
                            "name": "_timelock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7730,
                            "src": "2894:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TimelockController_$5630",
                              "typeString": "contract TimelockController"
                            }
                          },
                          "id": 7829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2904:18:34",
                          "memberName": "isOperationPending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4971,
                          "src": "2894:28:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view external returns (bool)"
                          }
                        },
                        "id": 7831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2894:37:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 7839,
                        "nodeType": "Block",
                        "src": "2993:56:34",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "id": 7836,
                                "name": "ProposalState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4370,
                                "src": "3015:13:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalState_$4370_$",
                                  "typeString": "type(enum IGovernor.ProposalState)"
                                }
                              },
                              "id": 7837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3029:8:34",
                              "memberName": "Canceled",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4364,
                              "src": "3015:22:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalState_$4370",
                                "typeString": "enum IGovernor.ProposalState"
                              }
                            },
                            "functionReturnParameters": 7788,
                            "id": 7838,
                            "nodeType": "Return",
                            "src": "3008:29:34"
                          }
                        ]
                      },
                      "id": 7840,
                      "nodeType": "IfStatement",
                      "src": "2890:159:34",
                      "trueBody": {
                        "id": 7835,
                        "nodeType": "Block",
                        "src": "2933:54:34",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "id": 7832,
                                "name": "ProposalState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4370,
                                "src": "2955:13:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalState_$4370_$",
                                  "typeString": "type(enum IGovernor.ProposalState)"
                                }
                              },
                              "id": 7833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2969:6:34",
                              "memberName": "Queued",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4367,
                              "src": "2955:20:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalState_$4370",
                                "typeString": "enum IGovernor.ProposalState"
                              }
                            },
                            "functionReturnParameters": 7788,
                            "id": 7834,
                            "nodeType": "Return",
                            "src": "2948:27:34"
                          }
                        ]
                      }
                    },
                    "id": 7841,
                    "nodeType": "IfStatement",
                    "src": "2788:261:34",
                    "trueBody": {
                      "id": 7827,
                      "nodeType": "Block",
                      "src": "2828:56:34",
                      "statements": [
                        {
                          "expression": {
                            "expression": {
                              "id": 7824,
                              "name": "ProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4370,
                              "src": "2850:13:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalState_$4370_$",
                                "typeString": "type(enum IGovernor.ProposalState)"
                              }
                            },
                            "id": 7825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2864:8:34",
                            "memberName": "Executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4369,
                            "src": "2850:22:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$4370",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          },
                          "functionReturnParameters": 7788,
                          "id": 7826,
                          "nodeType": "Return",
                          "src": "2843:29:34"
                        }
                      ]
                    }
                  },
                  "id": 7842,
                  "nodeType": "IfStatement",
                  "src": "2715:334:34",
                  "trueBody": {
                    "id": 7819,
                    "nodeType": "Block",
                    "src": "2742:40:34",
                    "statements": [
                      {
                        "expression": {
                          "id": 7817,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7791,
                          "src": "2764:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$4370",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "functionReturnParameters": 7788,
                        "id": 7818,
                        "nodeType": "Return",
                        "src": "2757:13:34"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7778,
              "nodeType": "StructuredDocumentation",
              "src": "2164:121:34",
              "text": " @dev Overridden version of the {Governor-state} function with added support for the `Queued` status."
            },
            "functionSelector": "3e4f49e6",
            "id": 7844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "state",
            "nameLocation": "2300:5:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7784,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 7782,
                  "name": "IGovernor",
                  "nameLocations": [
                    "2355:9:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4683,
                  "src": "2355:9:34"
                },
                {
                  "id": 7783,
                  "name": "Governor",
                  "nameLocations": [
                    "2366:8:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4352,
                  "src": "2366:8:34"
                }
              ],
              "src": "2346:29:34"
            },
            "parameters": {
              "id": 7781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7780,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nameLocation": "2314:10:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "2306:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2306:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2305:20:34"
            },
            "returnParameters": {
              "id": 7788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7787,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "2385:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProposalState_$4370",
                    "typeString": "enum IGovernor.ProposalState"
                  },
                  "typeName": {
                    "id": 7786,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7785,
                      "name": "ProposalState",
                      "nameLocations": [
                        "2385:13:34"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4370,
                      "src": "2385:13:34"
                    },
                    "referencedDeclaration": 4370,
                    "src": "2385:13:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalState_$4370",
                      "typeString": "enum IGovernor.ProposalState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2384:15:34"
            },
            "scope": 8094,
            "src": "2291:765:34",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8513
            ],
            "body": {
              "id": 7856,
              "nodeType": "Block",
              "src": "3215:44:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7853,
                        "name": "_timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7730,
                        "src": "3241:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5630",
                          "typeString": "contract TimelockController"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TimelockController_$5630",
                          "typeString": "contract TimelockController"
                        }
                      ],
                      "id": 7852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3233:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 7851,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3233:7:34",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 7854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3233:18:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7850,
                  "id": 7855,
                  "nodeType": "Return",
                  "src": "3226:25:34"
                }
              ]
            },
            "documentation": {
              "id": 7845,
              "nodeType": "StructuredDocumentation",
              "src": "3064:78:34",
              "text": " @dev Public accessor to check the address of the timelock"
            },
            "functionSelector": "d33219b4",
            "id": 7857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "timelock",
            "nameLocation": "3157:8:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7847,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3188:8:34"
            },
            "parameters": {
              "id": 7846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3165:2:34"
            },
            "returnParameters": {
              "id": 7850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7857,
                  "src": "3206:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3206:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3205:9:34"
            },
            "scope": 8094,
            "src": "3148:111:34",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8520
            ],
            "body": {
              "id": 7882,
              "nodeType": "Block",
              "src": "3440:174:34",
              "statements": [
                {
                  "assignments": [
                    7867
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7867,
                      "mutability": "mutable",
                      "name": "eta",
                      "nameLocation": "3459:3:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 7882,
                      "src": "3451:11:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7866,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3451:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7874,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 7870,
                          "name": "_timelockIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7734,
                          "src": "3488:12:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                            "typeString": "mapping(uint256 => bytes32)"
                          }
                        },
                        "id": 7872,
                        "indexExpression": {
                          "id": 7871,
                          "name": "proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7860,
                          "src": "3501:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3488:24:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 7868,
                        "name": "_timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7730,
                        "src": "3465:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5630",
                          "typeString": "contract TimelockController"
                        }
                      },
                      "id": 7869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3475:12:34",
                      "memberName": "getTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5023,
                      "src": "3465:22:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) view external returns (uint256)"
                      }
                    },
                    "id": 7873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3465:48:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3451:62:34"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 7875,
                        "name": "eta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7867,
                        "src": "3531:3:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 7876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3538:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3531:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 7879,
                      "name": "eta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7867,
                      "src": "3546:3:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3531:18:34",
                    "trueExpression": {
                      "hexValue": "30",
                      "id": 7878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3542:1:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7865,
                  "id": 7881,
                  "nodeType": "Return",
                  "src": "3524:25:34"
                }
              ]
            },
            "documentation": {
              "id": 7858,
              "nodeType": "StructuredDocumentation",
              "src": "3267:79:34",
              "text": " @dev Public accessor to check the eta of a queued proposal"
            },
            "functionSelector": "ab58fb8e",
            "id": 7883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposalEta",
            "nameLocation": "3361:11:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7862,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3413:8:34"
            },
            "parameters": {
              "id": 7861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7860,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nameLocation": "3381:10:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7883,
                  "src": "3373:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3373:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3372:20:34"
            },
            "returnParameters": {
              "id": 7865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7883,
                  "src": "3431:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3431:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3430:9:34"
            },
            "scope": 8094,
            "src": "3352:262:34",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8536
            ],
            "body": {
              "id": 7960,
              "nodeType": "Block",
              "src": "3901:554:34",
              "statements": [
                {
                  "assignments": [
                    7902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7902,
                      "mutability": "mutable",
                      "name": "proposalId",
                      "nameLocation": "3920:10:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 7960,
                      "src": "3912:18:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7901,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3912:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7909,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7904,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7887,
                        "src": "3946:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 7905,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "3955:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 7906,
                        "name": "calldatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7893,
                        "src": "3963:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "id": 7907,
                        "name": "descriptionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7895,
                        "src": "3974:15:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7903,
                      "name": "hashProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3219
                      ],
                      "referencedDeclaration": 3219,
                      "src": "3933:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) pure returns (uint256)"
                      }
                    },
                    "id": 7908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3933:57:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3912:78:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ProposalState_$4370",
                          "typeString": "enum IGovernor.ProposalState"
                        },
                        "id": 7916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 7912,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7902,
                              "src": "4017:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7911,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7844
                            ],
                            "referencedDeclaration": 7844,
                            "src": "4011:5:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$4370_$",
                              "typeString": "function (uint256) view returns (enum IGovernor.ProposalState)"
                            }
                          },
                          "id": 7913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4011:17:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$4370",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 7914,
                            "name": "ProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4370,
                            "src": "4032:13:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProposalState_$4370_$",
                              "typeString": "type(enum IGovernor.ProposalState)"
                            }
                          },
                          "id": 7915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4046:9:34",
                          "memberName": "Succeeded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4366,
                          "src": "4032:23:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$4370",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "src": "4011:44:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756c",
                        "id": 7917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4057:35:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9",
                          "typeString": "literal_string \"Governor: proposal not successful\""
                        },
                        "value": "Governor: proposal not successful"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9",
                          "typeString": "literal_string \"Governor: proposal not successful\""
                        }
                      ],
                      "id": 7910,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4003:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4003:90:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7919,
                  "nodeType": "ExpressionStatement",
                  "src": "4003:90:34"
                },
                {
                  "assignments": [
                    7921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7921,
                      "mutability": "mutable",
                      "name": "delay",
                      "nameLocation": "4114:5:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 7960,
                      "src": "4106:13:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7920,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4106:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7925,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7922,
                        "name": "_timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7730,
                        "src": "4122:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5630",
                          "typeString": "contract TimelockController"
                        }
                      },
                      "id": 7923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4132:11:34",
                      "memberName": "getMinDelay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5032,
                      "src": "4122:21:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 7924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4122:23:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4106:39:34"
                },
                {
                  "expression": {
                    "id": 7937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7926,
                        "name": "_timelockIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7734,
                        "src": "4156:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 7928,
                      "indexExpression": {
                        "id": 7927,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7902,
                        "src": "4169:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4156:24:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7931,
                          "name": "targets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7887,
                          "src": "4212:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 7932,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7890,
                          "src": "4221:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 7933,
                          "name": "calldatas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7893,
                          "src": "4229:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 7934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4240:1:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 7935,
                          "name": "descriptionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7895,
                          "src": "4243:15:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 7929,
                          "name": "_timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7730,
                          "src": "4183:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TimelockController_$5630",
                            "typeString": "contract TimelockController"
                          }
                        },
                        "id": 7930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4193:18:34",
                        "memberName": "hashOperationBatch",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5091,
                        "src": "4183:28:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32,bytes32) pure external returns (bytes32)"
                        }
                      },
                      "id": 7936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4183:76:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4156:103:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7938,
                  "nodeType": "ExpressionStatement",
                  "src": "4156:103:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7942,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7887,
                        "src": "4294:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 7943,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "4303:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 7944,
                        "name": "calldatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7893,
                        "src": "4311:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 7945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4322:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 7946,
                        "name": "descriptionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7895,
                        "src": "4325:15:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7947,
                        "name": "delay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7921,
                        "src": "4342:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7939,
                        "name": "_timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7730,
                        "src": "4270:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5630",
                          "typeString": "contract TimelockController"
                        }
                      },
                      "id": 7941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4280:13:34",
                      "memberName": "scheduleBatch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5247,
                      "src": "4270:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32,bytes32,uint256) external"
                      }
                    },
                    "id": 7948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4270:78:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7949,
                  "nodeType": "ExpressionStatement",
                  "src": "4270:78:34"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7951,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7902,
                        "src": "4381:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7952,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4393:5:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 7953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4399:9:34",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4393:15:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 7954,
                          "name": "delay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7921,
                          "src": "4411:5:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4393:23:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7950,
                      "name": "ProposalQueued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8508,
                      "src": "4366:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4366:51:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7957,
                  "nodeType": "EmitStatement",
                  "src": "4361:56:34"
                },
                {
                  "expression": {
                    "id": 7958,
                    "name": "proposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7902,
                    "src": "4437:10:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7900,
                  "id": 7959,
                  "nodeType": "Return",
                  "src": "4430:17:34"
                }
              ]
            },
            "documentation": {
              "id": 7884,
              "nodeType": "StructuredDocumentation",
              "src": "3622:71:34",
              "text": " @dev Function to queue a proposal to the timelock."
            },
            "functionSelector": "160cbed7",
            "id": 7961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "queue",
            "nameLocation": "3708:5:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7897,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3874:8:34"
            },
            "parameters": {
              "id": 7896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7887,
                  "mutability": "mutable",
                  "name": "targets",
                  "nameLocation": "3741:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7961,
                  "src": "3724:24:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7885,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3724:7:34",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 7886,
                    "nodeType": "ArrayTypeName",
                    "src": "3724:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7890,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "3776:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7961,
                  "src": "3759:23:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7888,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3759:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7889,
                    "nodeType": "ArrayTypeName",
                    "src": "3759:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7893,
                  "mutability": "mutable",
                  "name": "calldatas",
                  "nameLocation": "3808:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7961,
                  "src": "3793:24:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7891,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "3793:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 7892,
                    "nodeType": "ArrayTypeName",
                    "src": "3793:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7895,
                  "mutability": "mutable",
                  "name": "descriptionHash",
                  "nameLocation": "3836:15:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7961,
                  "src": "3828:23:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7894,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3828:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3713:145:34"
            },
            "returnParameters": {
              "id": 7900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7899,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7961,
                  "src": "3892:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3892:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3891:9:34"
            },
            "scope": 8094,
            "src": "3699:756:34",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3757
            ],
            "body": {
              "id": 7992,
              "nodeType": "Block",
              "src": "4805:107:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7985,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7967,
                        "src": "4857:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 7986,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7970,
                        "src": "4866:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 7987,
                        "name": "calldatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7973,
                        "src": "4874:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 7988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4885:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 7989,
                        "name": "descriptionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7975,
                        "src": "4888:15:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 7979,
                          "name": "_timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7730,
                          "src": "4816:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TimelockController_$5630",
                            "typeString": "contract TimelockController"
                          }
                        },
                        "id": 7981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4826:12:34",
                        "memberName": "executeBatch",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5461,
                        "src": "4816:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$__$",
                          "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32,bytes32) payable external"
                        }
                      },
                      "id": 7984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 7982,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4846:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4850:5:34",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4846:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4816:40:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$__$value",
                        "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32,bytes32) payable external"
                      }
                    },
                    "id": 7990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4816:88:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7991,
                  "nodeType": "ExpressionStatement",
                  "src": "4816:88:34"
                }
              ]
            },
            "documentation": {
              "id": 7962,
              "nodeType": "StructuredDocumentation",
              "src": "4463:112:34",
              "text": " @dev Overridden execute function that run the already queued proposal through the timelock."
            },
            "id": 7993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_execute",
            "nameLocation": "4590:8:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7977,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4796:8:34"
            },
            "parameters": {
              "id": 7976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7964,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7993,
                  "src": "4609:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4609:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7967,
                  "mutability": "mutable",
                  "name": "targets",
                  "nameLocation": "4661:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7993,
                  "src": "4644:24:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7965,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4644:7:34",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 7966,
                    "nodeType": "ArrayTypeName",
                    "src": "4644:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7970,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "4696:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7993,
                  "src": "4679:23:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7968,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4679:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7969,
                    "nodeType": "ArrayTypeName",
                    "src": "4679:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7973,
                  "mutability": "mutable",
                  "name": "calldatas",
                  "nameLocation": "4728:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7993,
                  "src": "4713:24:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7971,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4713:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 7972,
                    "nodeType": "ArrayTypeName",
                    "src": "4713:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7975,
                  "mutability": "mutable",
                  "name": "descriptionHash",
                  "nameLocation": "4756:15:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 7993,
                  "src": "4748:23:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7974,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4748:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4598:180:34"
            },
            "returnParameters": {
              "id": 7978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4805:0:34"
            },
            "scope": 8094,
            "src": "4581:331:34",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3920
            ],
            "body": {
              "id": 8043,
              "nodeType": "Block",
              "src": "5535:290:34",
              "statements": [
                {
                  "assignments": [
                    8012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8012,
                      "mutability": "mutable",
                      "name": "proposalId",
                      "nameLocation": "5554:10:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 8043,
                      "src": "5546:18:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8011,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5546:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8020,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8015,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7997,
                        "src": "5581:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 8016,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8000,
                        "src": "5590:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 8017,
                        "name": "calldatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8003,
                        "src": "5598:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "id": 8018,
                        "name": "descriptionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8005,
                        "src": "5609:15:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 8013,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5567:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GovernorTimelockControl_$8094_$",
                          "typeString": "type(contract super GovernorTimelockControl)"
                        }
                      },
                      "id": 8014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5573:7:34",
                      "memberName": "_cancel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3920,
                      "src": "5567:13:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) returns (uint256)"
                      }
                    },
                    "id": 8019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5567:58:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5546:79:34"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 8025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 8021,
                        "name": "_timelockIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7734,
                        "src": "5642:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 8023,
                      "indexExpression": {
                        "id": 8022,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8012,
                        "src": "5655:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5642:24:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5670:1:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5642:29:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8040,
                  "nodeType": "IfStatement",
                  "src": "5638:150:34",
                  "trueBody": {
                    "id": 8039,
                    "nodeType": "Block",
                    "src": "5673:115:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 8029,
                                "name": "_timelockIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7734,
                                "src": "5705:12:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                  "typeString": "mapping(uint256 => bytes32)"
                                }
                              },
                              "id": 8031,
                              "indexExpression": {
                                "id": 8030,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8012,
                                "src": "5718:10:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5705:24:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 8026,
                              "name": "_timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7730,
                              "src": "5688:9:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TimelockController_$5630",
                                "typeString": "contract TimelockController"
                              }
                            },
                            "id": 8028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5698:6:34",
                            "memberName": "cancel",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5307,
                            "src": "5688:16:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) external"
                            }
                          },
                          "id": 8032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5688:42:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8033,
                        "nodeType": "ExpressionStatement",
                        "src": "5688:42:34"
                      },
                      {
                        "expression": {
                          "id": 8037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5745:31:34",
                          "subExpression": {
                            "baseExpression": {
                              "id": 8034,
                              "name": "_timelockIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7734,
                              "src": "5752:12:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                "typeString": "mapping(uint256 => bytes32)"
                              }
                            },
                            "id": 8036,
                            "indexExpression": {
                              "id": 8035,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8012,
                              "src": "5765:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5752:24:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8038,
                        "nodeType": "ExpressionStatement",
                        "src": "5745:31:34"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 8041,
                    "name": "proposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8012,
                    "src": "5807:10:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8010,
                  "id": 8042,
                  "nodeType": "Return",
                  "src": "5800:17:34"
                }
              ]
            },
            "documentation": {
              "id": 7994,
              "nodeType": "StructuredDocumentation",
              "src": "4920:151:34",
              "text": " @dev Overridden version of the {Governor-_cancel} function to cancel the timelocked proposal if it as already\n been queued."
            },
            "id": 8044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_cancel",
            "nameLocation": "5338:7:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8007,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5508:8:34"
            },
            "parameters": {
              "id": 8006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7997,
                  "mutability": "mutable",
                  "name": "targets",
                  "nameLocation": "5373:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8044,
                  "src": "5356:24:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7995,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5356:7:34",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 7996,
                    "nodeType": "ArrayTypeName",
                    "src": "5356:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8000,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "5408:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8044,
                  "src": "5391:23:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7998,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5391:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7999,
                    "nodeType": "ArrayTypeName",
                    "src": "5391:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8003,
                  "mutability": "mutable",
                  "name": "calldatas",
                  "nameLocation": "5440:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8044,
                  "src": "5425:24:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8001,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "5425:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 8002,
                    "nodeType": "ArrayTypeName",
                    "src": "5425:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8005,
                  "mutability": "mutable",
                  "name": "descriptionHash",
                  "nameLocation": "5468:15:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8044,
                  "src": "5460:23:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8004,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5460:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5345:145:34"
            },
            "returnParameters": {
              "id": 8010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8009,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8044,
                  "src": "5526:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5526:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5525:9:34"
            },
            "scope": 8094,
            "src": "5329:496:34",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4285
            ],
            "body": {
              "id": 8056,
              "nodeType": "Block",
              "src": "6014:44:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8053,
                        "name": "_timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7730,
                        "src": "6040:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5630",
                          "typeString": "contract TimelockController"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TimelockController_$5630",
                          "typeString": "contract TimelockController"
                        }
                      ],
                      "id": 8052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6032:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 8051,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6032:7:34",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 8054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6032:18:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8050,
                  "id": 8055,
                  "nodeType": "Return",
                  "src": "6025:25:34"
                }
              ]
            },
            "documentation": {
              "id": 8045,
              "nodeType": "StructuredDocumentation",
              "src": "5833:105:34",
              "text": " @dev Address through which the governor executes action. In this case, the timelock."
            },
            "id": 8057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executor",
            "nameLocation": "5953:9:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8047,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5987:8:34"
            },
            "parameters": {
              "id": 8046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5962:2:34"
            },
            "returnParameters": {
              "id": 8050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8057,
                  "src": "6005:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6005:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6004:9:34"
            },
            "scope": 8094,
            "src": "5944:114:34",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8070,
              "nodeType": "Block",
              "src": "6492:47:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8067,
                        "name": "newTimelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8061,
                        "src": "6519:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5630",
                          "typeString": "contract TimelockController"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TimelockController_$5630",
                          "typeString": "contract TimelockController"
                        }
                      ],
                      "id": 8066,
                      "name": "_updateTimelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8093,
                      "src": "6503:15:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TimelockController_$5630_$returns$__$",
                        "typeString": "function (contract TimelockController)"
                      }
                    },
                    "id": 8068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6503:28:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8069,
                  "nodeType": "ExpressionStatement",
                  "src": "6503:28:34"
                }
              ]
            },
            "documentation": {
              "id": 8058,
              "nodeType": "StructuredDocumentation",
              "src": "6066:332:34",
              "text": " @dev Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates\n must be proposed, scheduled, and executed through governance proposals.\n CAUTION: It is not recommended to change the timelock while there are other queued governance proposals."
            },
            "functionSelector": "a890c910",
            "id": 8071,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8064,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8063,
                  "name": "onlyGovernance",
                  "nameLocations": [
                    "6477:14:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3066,
                  "src": "6477:14:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "6477:14:34"
              }
            ],
            "name": "updateTimelock",
            "nameLocation": "6413:14:34",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8061,
                  "mutability": "mutable",
                  "name": "newTimelock",
                  "nameLocation": "6447:11:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8071,
                  "src": "6428:30:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TimelockController_$5630",
                    "typeString": "contract TimelockController"
                  },
                  "typeName": {
                    "id": 8060,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8059,
                      "name": "TimelockController",
                      "nameLocations": [
                        "6428:18:34"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5630,
                      "src": "6428:18:34"
                    },
                    "referencedDeclaration": 5630,
                    "src": "6428:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TimelockController_$5630",
                      "typeString": "contract TimelockController"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6427:32:34"
            },
            "returnParameters": {
              "id": 8065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6492:0:34"
            },
            "scope": 8094,
            "src": "6404:135:34",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8092,
              "nodeType": "Block",
              "src": "6612:114:34",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8080,
                            "name": "_timelock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7730,
                            "src": "6651:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TimelockController_$5630",
                              "typeString": "contract TimelockController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TimelockController_$5630",
                              "typeString": "contract TimelockController"
                            }
                          ],
                          "id": 8079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6643:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8078,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6643:7:34",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6643:18:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8084,
                            "name": "newTimelock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8074,
                            "src": "6671:11:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TimelockController_$5630",
                              "typeString": "contract TimelockController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TimelockController_$5630",
                              "typeString": "contract TimelockController"
                            }
                          ],
                          "id": 8083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6663:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8082,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6663:7:34",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6663:20:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8077,
                      "name": "TimelockChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7741,
                      "src": "6628:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 8086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6628:56:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8087,
                  "nodeType": "EmitStatement",
                  "src": "6623:61:34"
                },
                {
                  "expression": {
                    "id": 8090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8088,
                      "name": "_timelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7730,
                      "src": "6695:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TimelockController_$5630",
                        "typeString": "contract TimelockController"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8089,
                      "name": "newTimelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8074,
                      "src": "6707:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TimelockController_$5630",
                        "typeString": "contract TimelockController"
                      }
                    },
                    "src": "6695:23:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TimelockController_$5630",
                      "typeString": "contract TimelockController"
                    }
                  },
                  "id": 8091,
                  "nodeType": "ExpressionStatement",
                  "src": "6695:23:34"
                }
              ]
            },
            "id": 8093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateTimelock",
            "nameLocation": "6556:15:34",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8074,
                  "mutability": "mutable",
                  "name": "newTimelock",
                  "nameLocation": "6591:11:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "6572:30:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TimelockController_$5630",
                    "typeString": "contract TimelockController"
                  },
                  "typeName": {
                    "id": 8073,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8072,
                      "name": "TimelockController",
                      "nameLocations": [
                        "6572:18:34"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5630,
                      "src": "6572:18:34"
                    },
                    "referencedDeclaration": 5630,
                    "src": "6572:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TimelockController_$5630",
                      "typeString": "contract TimelockController"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6571:32:34"
            },
            "returnParameters": {
              "id": 8076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6612:0:34"
            },
            "scope": 8094,
            "src": "6547:179:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 8095,
        "src": "1350:5379:34",
        "usedErrors": [
          31513,
          31515,
          37234
        ]
      }
    ],
    "src": "136:6595:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-23T05:45:08.131Z",
  "devdoc": {
    "details": "Extension of {Governor} that binds the execution process to an instance of {TimelockController}. This adds a delay, enforced by the {TimelockController} to all successful proposal (in addition to the voting duration). The {Governor} needs the proposer (and ideally the executor) roles for the {Governor} to work properly. Using this model means the proposal will be operated by the {TimelockController} and not by the {Governor}. Thus, the assets and permissions must be attached to the {TimelockController}. Any asset sent to the {Governor} will be inaccessible. WARNING: Setting up the TimelockController to have additional proposers besides the governor is very risky, as it grants them powers that they must be trusted or known not to use: 1) {onlyGovernance} functions like {relay} are available to them through the timelock, and 2) approved governance proposals can be blocked by them, effectively executing a Denial of Service attack. This risk will be mitigated in a future release. _Available since v4.3._",
    "errors": {
      "Empty()": [
        {
          "details": "An operation (e.g. {front}) couldn't be completed due to the queue being empty."
        }
      ]
    },
    "events": {
      "EIP712DomainChanged()": {
        "details": "MAY be emitted to signal that the domain could have changed."
      },
      "ProposalCanceled(uint256)": {
        "details": "Emitted when a proposal is canceled."
      },
      "ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)": {
        "details": "Emitted when a proposal is created."
      },
      "ProposalExecuted(uint256)": {
        "details": "Emitted when a proposal is executed."
      },
      "TimelockChange(address,address)": {
        "details": "Emitted when the timelock controller used for proposal execution is modified."
      },
      "VoteCast(address,uint256,uint8,uint256,string)": {
        "details": "Emitted when a vote is cast without params. Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used."
      },
      "VoteCastWithParams(address,uint256,uint8,uint256,string,bytes)": {
        "details": "Emitted when a vote is cast with params. Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used. `params` are additional encoded parameters. Their interpepretation also depends on the voting module used."
      }
    },
    "kind": "dev",
    "methods": {
      "CLOCK_MODE()": {
        "details": "See EIP-6372."
      },
      "COUNTING_MODE()": {
        "details": "A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class."
      },
      "cancel(address[],uint256[],bytes[],bytes32)": {
        "details": "See {IGovernor-cancel}."
      },
      "castVote(uint256,uint8)": {
        "details": "See {IGovernor-castVote}."
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "details": "See {IGovernor-castVoteBySig}."
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "details": "See {IGovernor-castVoteWithReason}."
      },
      "castVoteWithReasonAndParams(uint256,uint8,string,bytes)": {
        "details": "See {IGovernor-castVoteWithReasonAndParams}."
      },
      "castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)": {
        "details": "See {IGovernor-castVoteWithReasonAndParamsBySig}."
      },
      "clock()": {
        "details": "See {IERC6372}"
      },
      "constructor": {
        "details": "Set the timelock."
      },
      "eip712Domain()": {
        "details": "See {EIP-5267}."
      },
      "execute(address[],uint256[],bytes[],bytes32)": {
        "details": "See {IGovernor-execute}."
      },
      "getVotes(address,uint256)": {
        "details": "See {IGovernor-getVotes}."
      },
      "getVotesWithParams(address,uint256,bytes)": {
        "details": "See {IGovernor-getVotesWithParams}."
      },
      "hasVoted(uint256,address)": {
        "details": "Returns whether `account` has cast a vote on `proposalId`."
      },
      "hashProposal(address[],uint256[],bytes[],bytes32)": {
        "details": "See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts."
      },
      "name()": {
        "details": "See {IGovernor-name}."
      },
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155Receiver-onERC1155BatchReceived}."
      },
      "onERC1155Received(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155Receiver-onERC1155Received}."
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}."
      },
      "proposalDeadline(uint256)": {
        "details": "See {IGovernor-proposalDeadline}."
      },
      "proposalEta(uint256)": {
        "details": "Public accessor to check the eta of a queued proposal"
      },
      "proposalSnapshot(uint256)": {
        "details": "See {IGovernor-proposalSnapshot}."
      },
      "proposalThreshold()": {
        "details": "Part of the Governor Bravo's interface: _\"The number of votes required in order for a voter to become a proposer\"_."
      },
      "propose(address[],uint256[],bytes[],string)": {
        "details": "See {IGovernor-propose}."
      },
      "queue(address[],uint256[],bytes[],bytes32)": {
        "details": "Function to queue a proposal to the timelock."
      },
      "quorum(uint256)": {
        "details": "Minimum number of cast voted required for a proposal to be successful. NOTE: The `timepoint` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this timepoint (see {ERC20Votes})."
      },
      "relay(address,uint256,bytes)": {
        "details": "Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant."
      },
      "state(uint256)": {
        "details": "Overridden version of the {Governor-state} function with added support for the `Queued` status."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "timelock()": {
        "details": "Public accessor to check the address of the timelock"
      },
      "updateTimelock(address)": {
        "details": "Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates must be proposed, scheduled, and executed through governance proposals. CAUTION: It is not recommended to change the timelock while there are other queued governance proposals."
      },
      "version()": {
        "details": "See {IGovernor-version}."
      },
      "votingDelay()": {
        "details": "Delay, between the proposal is created and the vote starts. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. This can be increased to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts."
      },
      "votingPeriod()": {
        "details": "Delay, between the vote start and vote ends. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "CLOCK_MODE()": {
        "notice": "module:core"
      },
      "COUNTING_MODE()": {
        "notice": "module:voting"
      },
      "clock()": {
        "notice": "module:core"
      },
      "hasVoted(uint256,address)": {
        "notice": "module:voting"
      },
      "quorum(uint256)": {
        "notice": "module:user-config"
      },
      "votingDelay()": {
        "notice": "module:user-config"
      },
      "votingPeriod()": {
        "notice": "module:user-config"
      }
    },
    "version": 1
  }
}